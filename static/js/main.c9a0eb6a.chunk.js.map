{"version":3,"sources":["components/CollapsibleRow/CollapsibleRow.js","components/CustomMaterialPagination.js","components/AppointmentsTable/AppointmentsTable.js","data/Appointment.js","pages/PersonalArea/PersonalArea.js","data/User.js","components/LoginComponent/LoginComponent.js","components/LoginComponent/RedirectComponent/RedirectComponent.js","pages/HomePage/HomePage.js","components/Modal/Modal.js","pages/WorkArea/WorkArea.js","components/DentalNavBar.js","pages/ContactUs/ContactUs.js","pages/About/About.js","components/CustomSelect/CustomSelect.js","pages/Appointments/Appointments.js","App.js","reportWebVitals.js","index.js"],"names":["CollapsibleRow","props","appointments","fromScreen","returnToList","takeApp","row","index","setShowModal","setSelectedRow","React","useState","open","setOpen","classes","makeStyles","root","width","margin","container","maxHeight","displayFlex","display","justifyContent","alignItems","padding","paddingTop","paddingBottom","resize","fontSize","right","textAlign","hover","opacity","even","backgroundColor","odd","footer","height","minHeight","useStyles","TableRow","className","TableCell","appDate","appWeekDay","appStartTime","doctorName","value","id","IconButton","edge","color","aria-label","dir","onClick","Link","href","pacientId","pacientName","colSpan","Collapse","in","timeout","unmountOnExit","Box","Table","size","TableBody","component","scope","align","comments","TablePaginationActions","count","page","rowsPerPage","onChangePage","getNumberOfPages","rowCount","Math","ceil","disabled","LastPage","KeyboardArrowRight","Number","KeyboardArrowLeft","FirstPage","CustomMaterialPagination","onChangeRowsPerPage","currentPage","TablePagination","labelRowsPerPage","rowsPerPageOptions","labelDisplayedRows","from","to","e","target","SelectProps","native","ActionsComponent","AppointmentsTable","setPage","setRowsPerPage","colLbl","diraction","background","Paper","TableContainer","TableHead","header","slice","map","length","newPage","num","Appointment","parseAppointment","this","daysOfWeek","appDateTime","get","doctorId","undefined","createdAt","updatedAt","updatedBy","appDuration","n","date","getDate","month","getMonth","year","getFullYear","pad","toString","split","substring","newTimeValue","getTime","Date","newDay","getDay","PersonalArea","activeUser","employeeArray","personAppointments","setPersonAppointments","useParams","viewBy","__type","objectId","Parse","User","current","useEffect","a","Object","extend","query","Query","exists","equalTo","addDescending","find","pAppointment","pacientAppointments","appointment","appointmentsWithDoctorName","setDoctorName","doctor","item","fname","lname","console","log","fetchData","currentDate","history","filter","active","returnAppointment","appId","findIndex","temp","splice","pApp","set","save","savedApp","parseUser","job","tzeut","pwd","birthdate","sex","phone","email","jobStr","LoginComponent","onLogin","zeutInput","setZeutInput","pwdInput","setPwdInput","showWarning","setShowWarning","jss","create","plugins","jssPreset","rtl","theme","maxWidth","breakpoints","down","spacing","border","borderTopRightRadius","Container","Grid","xs","Alert","variant","severity","StylesProvider","TextField","fullWidth","label","name","onChange","type","ListItem","button","ListItemText","primary","Button","logIn","then","loguser","res","catch","error","RedirectComponent","borderTopLeftRadius","HomePage","users","doRedirect","setDoRedirect","user","rand","round","random","getModalStyle","top","left","transform","modal","space","paper","position","palette","boxShadow","shadows","Modal","handleClose","handleComment","show","children","modalStyle","summary","setSummary","closeModal","aria-labelledby","aria-describedby","onClose","style","noValidate","autoComplete","rowsMax","multiline","rows","InputProps","input","m","WorkArea","showModal","selectedRow","workerAppointments","setWorkerAppointments","notEqualTo","addAscending","setPacientName","appointmentsWitPacientName","userQuery","pacient","handleModal","getCommentFromSelectedRow","getSelectedRow","replace","useMemo","comment","curDate","arr","time","prev","updatedApp","DentalNavBar","onLogout","navbarDisplayFlex","navDisplayFlex","linkText","textDecoration","textTransform","navLinks","title","path","concat","AppBar","Toolbar","Home","List","ContactUs","About","CustomSelect","selectedItem","idKey","valueKey","handleSelected","all","viewSelect","push","MenuItem","selected","i","text","select","Select","labelWidth","autoWidth","event","Input","Appointments","jobs","employees","freeAppointments","setFreeAppointments","selectedJob","setSelectedJob","selectedDoctor","setSelectedDoctor","selectedBirthDate","setSelectedBirthDate","panel1Filled","setPanel1Filled","panel1Hide","setPanel1Hide","panel2Hide","setPanel2Hide","panel3Hide","setPanel3Hide","selectedApp","setSelectedApp","currentUser","selectedJobHome","greaterThanOrEqualTo","allAppointments","jobId","appointmentsToDisplay","employeesWithSelectedType","j","getAppointmentsByJob","currUser","hide","StyledButton","withStyles","borderBottomRightRadius","DisableddButton","Accordion","borderRadius","borderBottom","expanded","MuiAccordion","AccordionSummary","marginBottom","content","MuiAccordionSummary","AccordionDetails","MuiAccordionDetails","expandedPanel","setExpandedPanel","handleAccordionChange","panel","isExpanded","employeesBySelectedType","jobHebrew","clNamePanel1","clNamePanel2","clNamePanel3","justify","expandIcon","ExpandMore","utils","DateFnsUtils","format","maxwidth","Divider","AccordionActions","MenuProps","isRegisteredUser","App","setActiveUser","jobArray","setJobArray","setEmployeeArray","isCancelled","jobQuery","JobList","forEach","employeeList","employee","fullName","getJobs","fetchEmployee","logOut","exact","logedUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","serverURL","initialize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9a0eb6a.chunk.js","sourcesContent":["import './CollapsibleRow.css';\r\nimport React, { Component } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';   \r\nimport Table from '@material-ui/core/Table';  \r\nimport TableBody from '@material-ui/core/TableBody';  \r\nimport TableCell from '@material-ui/core/TableCell';    \r\nimport TableRow from '@material-ui/core/TableRow'; \r\n//import axios from 'axios';     \r\nimport { Box, Collapse, IconButton, Link, Typography } from \"@material-ui/core\";\r\nimport HowToRegIcon from '@material-ui/icons/HowToReg';\r\nimport PersonAddDisabledIcon from '@material-ui/icons/PersonAddDisabled';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\r\n\r\n\r\n\r\n\r\nfunction CollapsibleRow (props)\r\n{\r\n    const {appointments,fromScreen, returnToList, takeApp, row, index, setShowModal, setSelectedRow} = props;\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n   \r\n    const useStyles = makeStyles({  \r\n        root: {  \r\n          width: '90%',\r\n          margin: '0 auto',    \r\n        },  \r\n        container: {  \r\n          maxHeight: 440, \r\n        },  \r\n        displayFlex: { \r\n            display: `flex`,\r\n            justifyContent: `space-between`,\r\n            alignItems: \"baseline\",\r\n        },\r\n        padding: {\r\n            paddingTop: 0,\r\n            paddingBottom: 0,       \r\n        },\r\n        //style for font size\r\n        resize:{\r\n            fontSize: 14\r\n      },\r\n        right: {\r\n //           diraction: \"ltr\", \r\n            textAlign: \"right\"\r\n        },\r\n        hover: {\r\n            \"&:hover\": {\r\n            //   backgroundColor: \"#D4F1F4\",\r\n              opacity: \"0.7\"\r\n            }\r\n        },\r\n        even: {\r\n            backgroundColor: '#E3E8E9'            \r\n        },\r\n        odd: {\r\n            backgroundColor: '#DDFFE7'            \r\n        },        \r\n        footer: {\r\n            \"& > td > div\": {\r\n                height: 30,\r\n                minHeight: 30\r\n            },\r\n            backgroundColor: \"grey\",\r\n             height: 30,\r\n             minHeight: 30\r\n        }\r\n     }); \r\n\r\n     const classes = useStyles();\r\n  \r\n      \r\n      function removeApp(id) {\r\n        returnToList(id);\r\n      }\r\n\r\n      function openModal(id)\r\n      {\r\n        setSelectedRow(id);\r\n        setShowModal();\r\n      }\r\n\r\n    return (\r\n\r\n        <>\r\n            <TableRow  key={index} className={`${classes.hover} ${index % 2 ? classes.even :  classes.odd}`}>\r\n                <TableCell key={index} className={`${classes.padding} ${classes.right}`}>{row.appDate}</TableCell>  \r\n                <TableCell key={index} className={`${classes.padding} ${classes.right}`}>{row.appWeekDay}</TableCell>  \r\n                <TableCell key={index} className={`${classes.padding} ${classes.right}`}>{row.appStartTime}</TableCell>  \r\n                <TableCell key={index} className={`${classes.padding} ${classes.right}`}>{row.doctorName}</TableCell>                       \r\n                <TableCell key={index} className={`${classes.padding} ${classes.right}`} value={row.id}>\r\n                {\r\n                    (fromScreen === \"appoint\") ?                                 \r\n                    <IconButton edge=\"start\"  color=\"inherit\"  aria-label=\"create\" dir=\"rtl\" className={classes.padding}  value={row.id} \r\n                                onClick={() => takeApp(row.id)}\r\n                                >\r\n                        <HowToRegIcon fontSize=\"small\" color=\"primary\" />\r\n                    </IconButton >   \r\n                    :  (fromScreen === \"work\"  ?\r\n                     <div  className={`${classes.padding} ${classes.displayFlex}`}>\r\n                        <Link href={ `#/personal/${row.pacientId.id}` }  className={classes.resize} >\r\n                            {row.pacientName}\r\n                        </Link>    \r\n                        <IconButton edge=\"start\"  color=\"inherit\"  aria-label=\"create\" dir=\"rtl\" className={classes.padding}\r\n                                    onClick={() => openModal(row.id)}\r\n                                    >  \r\n                            <ImportContactsIcon fontSize=\"small\" color=\"primary\"/>\r\n                        </IconButton > \r\n                       \r\n                     </div>     \r\n\r\n                    : (\r\n                        (fromScreen === \"pActive\") ?                              \r\n                        <IconButton edge=\"start\"  color=\"inherit\"  aria-label=\"create\" dir=\"rtl\" className={classes.padding}\r\n                                    onClick={() => removeApp(row.id)} >  \r\n                            <PersonAddDisabledIcon fontSize=\"small\" color=\"primary\"/>\r\n                        </IconButton > \r\n                        :\r\n                        (\r\n                        fromScreen === \"pHistory\" ?\r\n                        <>\r\n                            <IconButton edge=\"start\"  color=\"inherit\"  aria-label=\"create\" dir=\"rtl\" className={classes.padding}  onClick={() => setOpen(!open)}>  \r\n                            <InfoIcon fontSize=\"small\" color=\"primary\"/>\r\n                            </IconButton > \r\n                           \r\n\r\n                        {/* <IconButton aria-label=\"expand row\"  size=\"small\"  onClick={() => setOpen(!open)} >\r\n                            {open ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\r\n                        </IconButton> */}\r\n\r\n                        </>                                       \r\n                            : \"\"\r\n                        )\r\n                    ))\r\n                }\r\n                </TableCell>  \r\n            </TableRow>  \r\n\r\n            <TableRow  className={`${classes.right} ${index % 2 ? classes.even :  classes.odd}`}>\r\n                <TableCell key={index} className={`${classes.padding} ${classes.right}`} colSpan={5}>\r\n                  <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                    <Box margin={1}>\r\n                      {/* <Typography variant=\"subtitle1\" gutterBottom component=\"div\">\r\n                      סיכום הביקור:\r\n                      </Typography> */}\r\n                      <Table size=\"small\">      \r\n                        <TableBody>\r\n                            <TableRow  key={index}>\r\n                              <TableCell key={index} component=\"th\" scope=\"row\"  align=\"right\">\r\n                              {row.comments}\r\n                              </TableCell>\r\n                            </TableRow>                                                               \r\n                        </TableBody>\r\n                      </Table>\r\n                    </Box>\r\n                  </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n           \r\n        </>\r\n\r\n    )\r\n}\r\nexport default CollapsibleRow;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport { IconButton, TablePagination } from '@material-ui/core';\r\nimport { FirstPage, KeyboardArrowLeft, KeyboardArrowRight, LastPage } from '@material-ui/icons';\r\n\r\nfunction TablePaginationActions({ count, page, rowsPerPage, onChangePage }) {\r\n\tconst handleFirstPageButtonClick = () => {\r\n\t\tonChangePage(0);\r\n\t};\r\n\r\n\tconst handleBackButtonClick = () => {\r\n\t\tonChangePage(page-1);\r\n\t};\r\n\r\n\tconst handleNextButtonClick = () => {\r\n\t\tonChangePage(Number(page) + 1);\r\n\t\r\n\t};\r\n\r\n\tconst handleLastPageButtonClick = () => {\r\n\t\tonChangePage(getNumberOfPages(count, rowsPerPage)-1);\t\t\r\n\t};\r\n\r\n\tconst getNumberOfPages = (rowCount, rowsPerPage) => Math.ceil(rowCount / rowsPerPage);\r\n\r\n\r\n\tconst useStyles = makeStyles({  \r\n        padding:    {\r\n            paddingTop: 0,\r\n            paddingBottom: 0,\r\n        },\r\n     }); \r\n\r\n     const classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} \r\n\t\t\t\tclassName={classes.padding} \r\n\t\t\t\taria-label=\"first page\">\r\n\t\t\t\t<LastPage />\r\n\t\t\t</IconButton>\r\n\t\t\t<IconButton onClick={handleBackButtonClick} disabled={page === 0} \r\n\t\t\t\tclassName={classes.padding} \r\n\t\t\t\taria-label=\"previous page\">\r\n\t\t\t\t<KeyboardArrowRight />\r\n\t\t\t</IconButton>\t\r\n\t\t\t<IconButton\r\n\t\t\t\tclassName={classes.padding} \r\n\t\t\t\tonClick={handleNextButtonClick}\r\n\t\t\t\tdisabled={page >= getNumberOfPages(count, rowsPerPage) - 1}\r\n\t\t\t\taria-label=\"next page\">\r\n\t\t\t\t<KeyboardArrowLeft />\r\n\t\t\t</IconButton>\r\n\t\t\t<IconButton\r\n\t\t\t\tclassName={classes.padding} \r\n\t\t\t\tonClick={handleLastPageButtonClick}\r\n\t\t\t\tdisabled={page >= getNumberOfPages(count, rowsPerPage) - 1}\r\n\t\t\t\taria-label=\"last page\">\r\n\t\t\t\t<FirstPage />\r\n\t\t\t</IconButton>\t\t\t\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nconst CustomMaterialPagination = ({ rowsPerPage, rowCount, onChangePage, onChangeRowsPerPage, currentPage }) => (\t  \r\n\t<TablePagination \r\n\t\tlabelRowsPerPage='שורות בדף:'\r\n\t\tcomponent=\"nav\"\r\n\t\tcount={rowCount}\r\n\t\trowsPerPage={rowsPerPage}\r\n\t\trowsPerPageOptions={[3, 6, 9]}  \r\n\t\tpage={currentPage}\r\n\t\tlabelDisplayedRows={({ from, to, count }) => ` הצגת שורות ${from}-${to} סה\"כ ${count} שורות`} \r\n\t\tonChangePage={onChangePage}\r\n\t\tonChangeRowsPerPage={ e => onChangeRowsPerPage(Number(e.target.value))}\r\n\t\tSelectProps={{\r\n\t\t\tnative: true,\r\n\t\t  }}\r\n\t\tActionsComponent={TablePaginationActions}\r\n\t/>\r\n\t\r\n\t);\r\n\r\nexport default CustomMaterialPagination;\r\n","import './AppointmentsTable.css';\r\nimport React from 'react';  \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport Paper from '@material-ui/core/Paper';  \r\nimport Table from '@material-ui/core/Table';  \r\nimport TableBody from '@material-ui/core/TableBody';  \r\n import TableCell from '@material-ui/core/TableCell';  \r\nimport TableContainer from '@material-ui/core/TableContainer';  \r\nimport TableHead from '@material-ui/core/TableHead';  \r\nimport TableRow from '@material-ui/core/TableRow';  \r\n//import axios from 'axios';    \r\nimport { useState, useEffect } from 'react'  \r\nimport CollapsibleRow from '../CollapsibleRow/CollapsibleRow';\r\nimport CustomMaterialPagination from '../CustomMaterialPagination';\r\nimport { DepartureBoardOutlined } from '@material-ui/icons';\r\n\r\nfunction AppointmentsTable (props)\r\n{\r\n    const {appointments,fromScreen, returnToList, takeApp, setShowModal, setSelectedRow} = props;\r\n\r\n    const [page, setPage] = React.useState(0);  \r\n    const [rowsPerPage, setRowsPerPage] = React.useState(3);  \r\n     // const [data, setData] = useState([]);   \r\n\r\n    const handleChangePage = newPage => {  \r\n      setPage(newPage);  \r\n    };  \r\n\r\n    const handleChangeRowsPerPage = num => {  \r\n      setRowsPerPage(num);\r\n      setPage(0);  \r\n    };  \r\n\r\n    const colLbl = (fromScreen === \"appoint\") ?  \"תאום תור\" : (  (fromScreen === \"pActive\") ?  \"ביטול תור\"  : ( fromScreen === \"pHistory\" ? \"צפייה בפרטים\"  : \"שם המטופל\" ) );\r\n\r\n    const useStyles = makeStyles({  \r\n      root: {  \r\n        width: '90%',\r\n        margin: '0 auto', \r\n                            \r\n      },  \r\n      container: {  \r\n        maxHeight: 440, \r\n          \r\n      },         \r\n      padding:    {\r\n          paddingTop: 0,\r\n          paddingBottom: 0,\r\n      },\r\n      right: {\r\n          diraction: \"ltr\", \r\n          textAlign: \"right\",\r\n          align: \"right\"\r\n      },    \r\n      footer: {\r\n          \"& > td > div\": {\r\n              height: 30,\r\n              minHeight: 30\r\n          },\r\n          background: 'linear-gradient(45deg, #D3F7EE 30%, #E4DFD9 90%)',\r\n      }\r\n    }); \r\n\r\n   const classes = useStyles();\r\n\r\n   return(\r\n        <Paper className={classes.root}>  \r\n          <TableContainer className={classes.container}>  \r\n              <Table  aria-label=\"sticky table\">  \r\n                <TableHead>  \r\n                  <TableRow  className={classes.header}>  \r\n                      <TableCell className={classes.padding} align=\"right\">תאריך</TableCell>  \r\n                      <TableCell className={classes.padding} align=\"right\">יום</TableCell>  \r\n                      <TableCell className={classes.padding} align=\"right\">שעה</TableCell>  \r\n                      <TableCell className={classes.padding} align=\"right\">רופא</TableCell>  \r\n                      <TableCell className={classes.padding} align=\"right\">{colLbl}</TableCell>  \r\n                  </TableRow>  \r\n                </TableHead>  \r\n              <TableBody>  \r\n                  {appointments.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row,index) => {  \r\n                      return (  \r\n                        <CollapsibleRow fromScreen={fromScreen} returnToList={returnToList} takeApp={takeApp} row={row} index={index} setShowModal={setShowModal}  setSelectedRow={setSelectedRow}/>\r\n                      );  \r\n                  })}  \r\n              </TableBody>  \r\n              </Table>  \r\n          </TableContainer>  \r\n\r\n          <CustomMaterialPagination rowCount={appointments.length} rowsPerPage={rowsPerPage} currentPage={page} \r\n                onChangePage={handleChangePage}  onChangeRowsPerPage={handleChangeRowsPerPage}/>\r\n        </Paper>  \r\n    )\r\n}\r\nexport default AppointmentsTable;","import Parse from 'parse';\r\n\r\nclass Appointment \r\n{\r\n    constructor(parseAppointment) \r\n    {\r\n        this.daysOfWeek = [\"א\", \"ב\", \"ג\", \"ד\", \"ה\", \"ו\", \"ש\"];\r\n\r\n        this.id = parseAppointment.id;\r\n        this.appDateTime = parseAppointment.get(\"appDateTime\");   // new Date(appDateTime);\r\n        this.doctorId = parseAppointment.get(\"doctorId\");       \r\n        this.doctorName = parseAppointment.get(\"doctorId\") == undefined ? \"\" : parseAppointment.get(\"doctorId\").get(\"fname\") + \" \" + parseAppointment.get(\"doctorId\").get(\"lname\"); \r\n        this.pacientId = parseAppointment.get(\"pacientId\");\r\n        this.pacientName =  parseAppointment.get(\"pacientId\") == undefined ? \"\" : parseAppointment.get(\"pacientId\").get(\"fname\")+ \" \" + parseAppointment.get(\"pacientId\").get(\"lname\"); \r\n        this.comments = parseAppointment.get(\"comments\");        \r\n        this.createdAt =  parseAppointment.get(\"createdAt\");   // new Date(createdAt);\r\n        this.updatedAt =  parseAppointment.get(\"updatedAt\"); \r\n        this.updatedBy = parseAppointment.get(\"updatedBy\");\r\n\r\n\r\n        this.appDuration = 29;  // duration of appointment in minutes\r\n    }\r\n\r\n    // if some months or days of the month are single-digit it adds leading 0 to do them as double-digit.\r\n    pad (n) {\r\n        return n < 10 ? '0' + n : n;\r\n    }\r\n\r\n    get appDate() {\r\n        const date = this.appDateTime.getDate();\r\n        const month = this.appDateTime.getMonth(); \r\n        const year = this.appDateTime.getFullYear();\r\n\r\n        return this.pad(date) + \"/\" + this.pad(month+1) + \"/\" + year;\r\n      }\r\n\r\n    get appStartTime()\r\n    {\r\n        const dateArr = this.appDateTime.toString().split(\" \");\r\n        return dateArr[4].substring(0, 5);\r\n    }\r\n\r\n    get appEndTime()\r\n    {\r\n        const newTimeValue = this.appDateTime.getTime();\r\n        return new Date(newTimeValue + this.appDuration * 60 * 1000);\r\n    }\r\n\r\n    get appWeekDay()\r\n    {\r\n        const newDay = this.appDateTime;\r\n        return this.daysOfWeek[newDay.getDay()];\r\n    }\r\n\r\n}\r\nexport default Appointment;","import { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useParams } from 'react-router-dom';\r\nimport Parse from 'parse';\r\nimport AppointmentsTable from \"../../components/AppointmentsTable/AppointmentsTable\";\r\nimport \"./PersonalArea.css\"\r\nimport Appointment from \"../../data/Appointment\";\r\nimport { ContactSupportOutlined } from \"@material-ui/icons\";\r\n\r\nfunction PersonalArea (props)\r\n{\r\n    //const {activeUser, employeeArray, returnToList} = props; \r\n\r\n    const {activeUser, employeeArray} = props; \r\n    const [personAppointments, setPersonAppointments] = useState([]);\r\n\r\n    const { id } = useParams();\r\n\r\n    // let personAppointments = activeUser ? appointments.filter(item=>item.pacientId === activeUser.id) : [];\r\n\r\n    const viewBy = id ? {__type: \"Pointer\", className: \"_User\", objectId: id}  : Parse.User.current();\r\n\r\n   useEffect(()=> {\r\n         async function fetchData() {\r\n            const parseAppointment = Parse.Object.extend('Appointment');\r\n            const query = new Parse.Query(parseAppointment);\r\n\r\n            query.exists(\"doctorId\");\r\n            query.equalTo(\"pacientId\", viewBy);\r\n            query.addDescending(\"appDateTime\");  \r\n\r\n            const pAppointment = await query.find();            \r\n            const pacientAppointments = pAppointment.map(appointment => new Appointment(appointment));\r\n            // const appointmentsWithDoctorName = await fetchDoctor(pacientAppointments);\r\n            const appointmentsWithDoctorName = setDoctorName( pacientAppointments)\r\n            setPersonAppointments(appointmentsWithDoctorName);\r\n        }\r\n\r\n            // variant 1: get doctor name from db User table\r\n            async function fetchDoctor( appointments) {\r\n                for (const appointment of appointments) {\r\n                    const userQuery = new Parse.Query(Parse.User);\r\n                    const doctor = await userQuery.get(appointment.doctorId.id) \r\n                    appointment.doctorName = doctor.get(\"fname\")  +\" \"+ doctor.get(\"lname\");\r\n                }\r\n                return appointments;\r\n            } \r\n\r\n            // variant 2:  get doctor name from array after one fetch in App.js \r\n            function setDoctorName( appointments) {\r\n                for (const appointment of appointments) {\r\n                    const doctor = employeeArray.find(item => item.doctorId === appointment.doctorId.id );\r\n                    appointment.doctorName = doctor.fname  +\" \"+ doctor.lname;\r\n                    console.log( appointment.doctorName);\r\n                }\r\n                return appointments;\r\n            }\r\n\r\n\r\n    if (activeUser) {\r\n        fetchData();\r\n    }       \r\n               \r\n\r\n    },[]);\r\n   \r\n    if(!activeUser )\r\n        return <Redirect to=\"/\"/> \r\n\r\n    const currentDate = new Date();\r\n    const history = personAppointments.filter(item => item.appDateTime < currentDate);\r\n    const active = personAppointments.filter(item => item.appDateTime >= currentDate);\r\n\r\n    async function returnAppointment(appId)\r\n    {\r\n\r\n        const index = personAppointments.findIndex(item => item.id === appId);\r\n        let temp = [...personAppointments];\r\n        // remove appointment at index 'index' from array\r\n        temp.splice(index, 1);\r\n\r\n        const pAppointment = Parse.Object.extend('Appointment');\r\n        const query = new Parse.Query(pAppointment);\r\n        const pApp = await query.get(appId);\r\n\r\n        //pApp.set('pacientId', undefined);\r\n        pApp.set('pacientId', null);\r\n        pApp.set('updatedBy', Parse.User.current());\r\n        const savedApp = await pApp.save();\r\n\r\n        const updatedApp = new Appointment (savedApp);\r\n        setPersonAppointments(temp);\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n           <h3>שלום   { activeUser ? activeUser.fname : \"\"}</h3>\r\n           <h4>{ id ? \" הדף של מטופל \" + id : \"\"}</h4>\r\n\r\n            {active && active.length > 0 ? \r\n            <AppointmentsTable appointments={active}  fromScreen=\"pActive\"  returnToList={returnAppointment} />\r\n            : <p>אין לך תורים עתידיים</p>}\r\n\r\n\r\n            <h4>הסטוריית ביקורים </h4>\r\n\r\n            { history && history.length > 0 ?\r\n            <AppointmentsTable appointments={history}  fromScreen=\"pHistory\"  returnToList={returnAppointment} />\r\n            : <p>אין לך הסטורייה לצפייה</p>}\r\n\r\n        </>\r\n    )\r\n}\r\nexport default PersonalArea;","//import Parse from 'parse';\r\n\r\nclass User \r\n{\r\n    constructor(parseUser, job) \r\n    {\r\n        this.id = parseUser.id;\r\n        this.tzeut = parseUser.get(\"tzeut\");\r\n        this.pwd = parseUser.get(\"pwd\");        \r\n        this.fname = parseUser.get(\"fname\");\r\n        this.lname = parseUser.get(\"lname\");        \r\n        this.birthdate =  parseUser.get(\"birthdate\");  \r\n        this.sex = parseUser.get(\"sex\"); \r\n        this.phone = parseUser.get(\"phone\");\r\n        this.email = parseUser.get(\"email\");\r\n        this.job =  parseUser.get('jobId') != null ? parseUser.get('jobId').id : \"\";\r\n        this.jobStr = job;\r\n    }\r\n}\r\nexport default User;","import './LoginComponent.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\nimport { ListItem, ListItemText } from '@material-ui/core';\r\nimport { StylesProvider, sProvider, jssPreset, ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { useEffect, useState } from 'react';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Parse from 'parse';\r\nimport User from '../../data/User';\r\n\r\nfunction LoginComponent (props)\r\n{\r\n    const { activeUser, onLogin} = props;\r\n    const [zeutInput, setZeutInput] = useState(\"\");\r\n    const [pwdInput, setPwdInput] = useState(\"\");\r\n    const [showWarning, setShowWarning] = useState(false);\r\n\r\n\r\n    function checkLogin()\r\n    {\r\n       Parse.User.logIn( zeutInput, pwdInput).then((loguser) => {\r\n\r\n        if(loguser.get('jobId') != null)\r\n        {\r\n            const job = Parse.Object.extend('job');\r\n            const query = new Parse.Query(job);\r\n\r\n            query.get(loguser.get('jobId').id).then(res=>{\r\n               // successful login for worker\r\n               onLogin(new User(loguser, res.get(\"jobHebrew\")));\r\n            })\r\n            .catch(error=>\r\n            {\r\n                console.log(error);\r\n            })\r\n        }\r\n\r\n        else\r\n        {\r\n            // successful login for pacient\r\n            onLogin(new User(loguser, \"\"));\r\n        }\r\n\r\n        }).catch(error => {\r\n            console.error('Error while logging in user', error);\r\n            setShowWarning(true)\r\n        })\r\n    }\r\n\r\n    function inputZeutHandle(e)\r\n    {\r\n        setZeutInput(e.target.value);\r\n        setShowWarning(false);\r\n    }\r\n\r\n    function inputPwdHandle(e)\r\n    {\r\n        setPwdInput(e.target.value);\r\n        setShowWarning(false);\r\n    }\r\n\r\n    // Configure JSS\r\n    const jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            maxWidth: 345,\r\n            [theme.breakpoints.down(\"md\")] : {\r\n                maxWidth: 280\r\n            },\r\n            [theme.breakpoints.down(\"sm\")] : {\r\n                maxWidth: 200\r\n            }\r\n          },        \r\n        container: {\r\n            padding: theme.spacing(3),\r\n            border: \"1px solid blue\",\r\n            borderTopRightRadius: \"25px\",\r\n        },\r\n\r\n        right: {\r\n            display: `flex`,\r\n            justifyContent: `space-around`\r\n        }\r\n  }));\r\n\r\n    const classes = useStyles(); \r\n\r\n    return (\r\n        <Container className={`${classes.container} ${classes.root}`} >\r\n            <h3>כניסה למטופל</h3>\r\n            <form>\r\n                <Grid container spacing={3} className={classes.right}>\r\n                    <Grid item xs={12}>\r\n                       \r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}  dir=\"rtl\">                   \r\n                            {showWarning ? <Alert variant=\"outlined\" severity=\"error\">  \r\n                                                שם משתמש או סיסמא לא תקינים!\r\n                                            </Alert>: null}\r\n\r\n                            </Grid>\r\n                            <StylesProvider jss={jss}>\r\n                                <Grid item xs={12}  dir=\"rtl\">                   \r\n                                    <TextField  fullWidth label=\"תעודת זהות\"  value={zeutInput} name=\"tzeut\" size=\"small\" variant=\"outlined\" onChange={inputZeutHandle} />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField  fullWidth label=\"סיסמא\"  value={pwdInput}  name=\"password\" size=\"small\" type=\"password\" variant=\"outlined\" onChange={inputPwdHandle}/>\r\n                                </Grid>\r\n                            </StylesProvider>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <a href=\"\" >\r\n                        <ListItem button>\r\n                        <ListItemText primary=\"שכחת סיסמא?\" />\r\n                        </ListItem>\r\n                    </a>\r\n                    \r\n                    \r\n                    <Grid item xs={12}>\r\n                        <Button color=\"primary\" fullWidth type=\"button\" variant=\"contained\" onClick={checkLogin}>כניסה</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\nexport default LoginComponent","import './RedirectComponent.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { ListItem, ListItemText } from '@material-ui/core';\r\nimport { jssPreset } from \"@material-ui/core/styles\";\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\n\r\nfunction RedirectComponent (props)\r\n{\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            maxWidth: 500,\r\n            [theme.breakpoints.down(\"md\")] : {\r\n                maxWidth: 350\r\n            },\r\n            [theme.breakpoints.down(\"sm\")] : {\r\n                maxWidth: 200\r\n            }\r\n          },        \r\n        container: {\r\n            padding: theme.spacing(3),\r\n            border: \"1px solid blue\",\r\n            borderTopLeftRadius: \"25px\",\r\n        },\r\n\r\n        right: {\r\n            display: `flex`,\r\n            justifyContent: `space-around`\r\n        }\r\n  }));\r\n\r\n      // Configure JSS\r\n      const jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\n    const classes = useStyles(); \r\n    return(\r\n        <>\r\n        <Container className={`${classes.container} ${classes.root}`} >\r\n            <h3>שירותי האתר</h3>\r\n\r\n\r\n            <a href={ `#/appointments/Geb4GTbjAg` } >\r\n                <ListItem button>\r\n                <ListItemText primary=\"זימון תור לבדיקת רופא שיניים\" />\r\n                </ListItem>\r\n             </a>\r\n\r\n             <a href={ `#/appointments/5lRmREiFH3`} >\r\n                <ListItem button>\r\n                <ListItemText primary=\"זימון תור לבדיקה ליישור שיניים\" />\r\n                </ListItem>\r\n             </a>    \r\n             <a  href={ `#/appointments/S5Z6hBmEka`} >\r\n                <ListItem button>\r\n                <ListItemText primary=\"זימון תור לשיננית\" />\r\n                </ListItem>\r\n             </a>                      \r\n                \r\n        </Container>\r\n        </>         \r\n    )\r\n\r\n}\r\nexport default RedirectComponent\r\n","import { Grid } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport LoginComponent from \"../../components/LoginComponent/LoginComponent\";\r\nimport RedirectComponent from \"../../components/LoginComponent/RedirectComponent/RedirectComponent\";\r\nimport \"./HomePage.css\"\r\n\r\n\r\nfunction HomePage (props)\r\n{\r\n    const {activeUser, users, onLogin} = props;\r\n\r\n    const [doRedirect, setDoRedirect] = useState(false);\r\n\r\n    function redirectOnLogin(user)\r\n    {\r\n        onLogin(user);\r\n        setDoRedirect(true);\r\n    }\r\n\r\n    if (doRedirect && activeUser)\r\n    {\r\n        if (activeUser.job)\r\n            return <Redirect to=\"/work\"/>\r\n        else   \r\n            return <Redirect to=\"/personal\"/>\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"p-home\">\r\n            {/* <p>Home Page</p> */}\r\n            <Grid container spacing={1}  >\r\n                <Grid container item xs={12} spacing={3}>\r\n                {/* <FormRow> */}\r\n                    <LoginComponent activeUser={activeUser} onLogin={redirectOnLogin} />\r\n                    <RedirectComponent activeUser={activeUser} />\r\n                    {/* </FormRow> */}\r\n                </Grid>\r\n            </Grid>\r\n         </div>\r\n    )\r\n}\r\nexport default HomePage;","import \"./Modal.css\"\r\nimport React, { useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\r\n\r\n// Configure JSS\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nfunction RTL(props) {\r\n  return (\r\n    <StylesProvider jss={jss}>\r\n      {props.children}\r\n    </StylesProvider>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\n// const theme = createMuiTheme({\r\n//     direction: 'rtl',\r\n//   });\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        textAlign: \"right\",\r\n    },\r\n    space: {\r\n        display: `flex`,\r\n        // justifyContent: `space-around`,\r\n        justifyContent: `center`,\r\n        paddingTop: 20,\r\n        paddingBottom: 20, \r\n    },\r\n\r\n\r\n\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 450,\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    //style for font size\r\n    resize:{\r\n        fontSize: 12,\r\n        textAlign: \"right\"\r\n    },    \r\n}));\r\n\r\nexport default function Modal( { handleClose, handleComment, show, children }) {\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n\r\n    const [summary , setSummary] = useState(\"\");\r\n\r\n    function closeModal() {\r\n        setSummary(\"\");\r\n        handleClose();\r\n    }\r\n    \r\n    function handleAddComment() {\r\n        handleComment(summary);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <div  dir=\"rtl\">\r\n            <dialog \r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={show}\r\n                onClose={handleClose}\r\n            >\r\n                <div style={modalStyle} className={classes.paper}>\r\n                    <h2>Simple React Modal</h2>\r\n                    <p>\r\n                       {children}\r\n                    </p>\r\n\r\n                    <form className={classes.root} noValidate autoComplete=\"off\">\r\n\r\n                        <TextField  className={classes.resize} \r\n                            label=\"סיכום\"\r\n                            variant=\"filled\"\r\n                            fullWidth={true}\r\n                            rowsMax=\"4\"\r\n                            //variant=\"outlined\" \r\n                            multiline={true}\r\n                            rows={4}\r\n                            InputProps={{\r\n                                classes: {\r\n                                input: classes.resize,\r\n                                },\r\n                            }}\r\n                          textAlign=\"right\"\r\n                            value = {summary}\r\n                            onChange={e => setSummary(e.target.value)} \r\n                        />\r\n\r\n                    </form>\r\n                    <div className={classes.space}>\r\n\r\n                        <Button  variant=\"contained\"  color=\"primary\" onClick={closeModal} m=\"2rem\">\r\n                        Close\r\n                        </Button>           \r\n                        <div  style={{ width:\"30px\"}}></div>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={handleAddComment}>\r\n                        Save\r\n                        </Button> \r\n\r\n                    </div>                                 \r\n                </div>\r\n\r\n            </ dialog>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import { Redirect } from \"react-router-dom\";\r\nimport AppointmentsTable from \"../../components/AppointmentsTable/AppointmentsTable\";\r\nimport React, { Component, useMemo, useState, useEffect } from \"react\";\r\nimport Modal from \"../../components/Modal/Modal\";\r\nimport \"./WorkArea.css\"\r\nimport Appointment from \"../../data/Appointment\";\r\nimport Parse from 'parse';\r\n\r\nfunction WorkArea (props)\r\n{\r\n    const {activeUser, appointments} = props;\r\n    const [showModal, setShowModal] = React.useState(false);\r\n    const [selectedRow, setSelectedRow] = React.useState(-1);\r\n    const [workerAppointments, setWorkerAppointments] =  React.useState([]);\r\n  \r\n    const [comment, setComment] = React.useState(null);\r\n\r\n    useEffect(()=> {\r\n\r\n        async function fetchData() {\r\n           const parseAppointment = Parse.Object.extend('Appointment');\r\n           const query = new Parse.Query(parseAppointment);\r\n           query.notEqualTo(\"pacientId\",null);\r\n           query.equalTo(\"doctorId\", Parse.User.current());\r\n           query.addAscending(\"appDateTime\");  \r\n           const pAppointment = await query.find();\r\n         \r\n           const workerAppointments = pAppointment.map(appointment => new Appointment(appointment));\r\n           const appointmentsWitPacientName = await setPacientName( workerAppointments)\r\n           setWorkerAppointments(appointmentsWitPacientName);\r\n\r\n        }\r\n        async function fetchPacient( appointment) {\r\n                    const userQuery = new Parse.Query(Parse.User);\r\n                    userQuery.equalTo(\"objectId\", appointment.pacientId.id);\r\n                    const pacient = await userQuery.get(appointment.pacientId.id) \r\n                    appointment.pacientName = pacient.get(\"fname\") +\" \"+ pacient.get(\"lname\");                  \r\n        } \r\n\r\n        async function setPacientName ( appointments) {\r\n            for (const appointment of appointments) {\r\n                const userQuery = new Parse.Query(Parse.User);\r\n                const pacient = await userQuery.get(appointment.pacientId.id) \r\n                appointment.pacientName = pacient.get(\"fname\")  +\" \"+ pacient.get(\"lname\");\r\n            }\r\n            return appointments;\r\n        }         \r\n         \r\n        if (activeUser) {\r\n            fetchData();\r\n            }       \r\n      \r\n\r\n   },[activeUser]);\r\n\r\n\r\n    const handleModal = () => setShowModal(!showModal)\r\n\r\n    function getCommentFromSelectedRow()\r\n    {\r\n        if( workerAppointments.length > 0)\r\n        {\r\n            const getSelectedRow = workerAppointments.find(item => item.id === selectedRow);\r\n            return getCommentFromSelectedRow = getSelectedRow == undefined ? \"\" :  getSelectedRow.comments == undefined ? \"\" : getSelectedRow.comments.replace('/\\n/g', '&#13;&#10;');\r\n        }\r\n    }\r\n    \r\n    // if selected row was not changed that comment not needed to be changed also\r\n    const comments = useMemo(() => getCommentFromSelectedRow(), [selectedRow, workerAppointments]);\r\n\r\n    function getIndexOfSelected(selectedRow)\r\n    {\r\n        return workerAppointments.findIndex(item => item.id === selectedRow);\r\n    } \r\n\r\n    async function addComment(comment) \r\n    {\r\n        //console.log(\"selectedRow  \"+ selectedRow);\r\n        const index = workerAppointments.findIndex(item => item.id === selectedRow);\r\n        let temp = [...workerAppointments];\r\n\r\n        // remove appointment at index 'index' from array\r\n        temp.splice(index, 1);\r\n\r\n\r\n       const pAppointment = Parse.Object.extend('Appointment');\r\n       const query = new Parse.Query(pAppointment);\r\n       const pApp = await query.get(selectedRow);\r\n        // get old comment and append new comment\r\n       const curDate = new Date();\r\n       const arr = curDate.toString().split(\" \");\r\n       const time = arr[4].substring(0, 5);\r\n       const prev = pApp.get('comments');\r\n       pApp.set('comments', prev +\"\\n\" + time + \"\\n\" + comment);\r\n\r\n       pApp.set('updatedBy', Parse.User.current());\r\n       const savedApp = await pApp.save();\r\n\r\n       const updatedApp = new Appointment (savedApp);\r\n\r\n       // insert updated appointment to array \r\n       temp.splice(index, 0, updatedApp);\r\n\r\n       setWorkerAppointments(temp);\r\n    }\r\n\r\n    if(!activeUser || !activeUser.job)\r\n        return <Redirect to=\"/\"/>\r\n\r\n    return(\r\n        <>\r\n            <p>today {workerAppointments.length}</p>\r\n            <h3> שלום   { activeUser ?  activeUser.jobStr+\" \"+activeUser.fname  : \"\"} </h3>\r\n            <p>Work Area</p>\r\n            {workerAppointments && workerAppointments.length > 0 ?\r\n            <>\r\n             <AppointmentsTable appointments={workerAppointments} fromScreen=\"work\" setShowModal={handleModal} setSelectedRow={setSelectedRow}/>\r\n             <Modal show={showModal} handleClose={handleModal} handleComment={addComment} children={comments}   />\r\n             </>\r\n           :\r\n            <>\r\n             <p>אין לך תורים להיום</p>\r\n            <p>קח ילדים לחופש!</p>\r\n            </>}\r\n        </>\r\n    )\r\n}\r\nexport default WorkArea;","import { AppBar, Container, HomeIcon, Button, IconButton, Toolbar, List, ListItem, ListItemText } from \"@material-ui/core\"\r\nimport { Home,  AccessAlarm, ThreeDRotation } from \"@material-ui/icons\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\n\r\nfunction DentalNavBar(props) {\r\n    const {activeUser, onLogout, users} = props; \r\n\r\n\r\n    const useStyles = makeStyles({\r\n        navbarDisplayFlex: { \r\n            display: `flex`,\r\n            justifyContent: `space-between`\r\n        },\r\n        navDisplayFlex: { \r\n            display: `flex`,\r\n            justifyContent: `flex-end`\r\n        },\r\n        linkText: {\r\n          textDecoration: `none`,\r\n          textTransform: `uppercase`,\r\n          color: `white`,\r\n        }\r\n     });\r\n  \r\n    let navLinks = [\r\n\r\n        { title: `צור קשר `, path: `#/contactus`},\r\n        { title: `הצוות הרפואי שלנו`, path: `#/about`},\r\n        { title: `זימון / ביטול תור`, path: `#/appointments`}\r\n    ]\r\n\r\n    if (activeUser)\r\n    {\r\n        if(activeUser.job)\r\n        {\r\n            navLinks = navLinks.concat(\r\n                { title: `איזור עבודה`, path: `#/work` } );\r\n        }\r\n        else\r\n        {\r\n            navLinks = navLinks.concat(\r\n                { title: `איזור אישי`, path: `#/personal`} );\r\n        }\r\n    }\r\n\r\n    const classes = useStyles(); \r\n  \r\n    return (\r\n         <AppBar>\r\n            <Toolbar>\r\n                <Container  maxWidth=\"md\" className={classes.navbarDisplayFlex}>\r\n                < IconButton edge=\"start\"   color=\"inherit\"   aria-label=\"home\"  href=\"#/\"  dir=\"rtl\">\r\n                    <Home fontSize=\"small\" />\r\n                </IconButton >\r\n                <List component=\"nav\" aria-labelledby=\"main navigation\" className={classes.navDisplayFlex} edge=\"end\" >\r\n                    {navLinks.map(({ title, path, onClick }) => (\r\n                    <a href={path} key={title} className={classes.linkText} >\r\n                        <ListItem button>\r\n                        <ListItemText primary={title} />\r\n                        </ListItem>\r\n                    </a>\r\n                    ))}\r\n                    {activeUser ? \r\n                    <a href=\"#/\" className={classes.linkText} onClick={onLogout}>\r\n                        <ListItem button>\r\n                        <ListItemText primary=\"התנתק\" />\r\n                        </ListItem> \r\n                    </a>  \r\n                    : null}\r\n                </List>\r\n                </Container>\r\n            </Toolbar>\r\n         </AppBar>\r\n        )\r\n}\r\nexport default DentalNavBar","import \"./ContactUs.css\"\r\n\r\nfunction ContactUs (props)\r\n{\r\n    const {activeUser} = props; \r\n\r\n    return(\r\n        <>\r\n            <p>Contact us</p>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default ContactUs;","import \"./About.css\"\r\n\r\nfunction About (props)\r\n{\r\n    const {activeUser} = props; \r\n\r\n    return(\r\n        <>\r\n            <p>About us</p>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default About;","import { Input, MenuItem, Select } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport \"./CustomSelect.css\"\r\n\r\nfunction CustomSelect (props) \r\n{\r\n    const {arr, selectedItem, idKey, valueKey, handleSelected, all} = props;\r\n    \r\n     let viewSelect = []; \r\n\r\n     if (all !== \"\")\r\n     {\r\n         //debugger;\r\n        viewSelect.push(    \r\n            <MenuItem value={all}  key={all}\r\n                // {...selectedItem===\"\"} desabled\r\n                // {...selectedItem==={all} ? `{selected}` : \"\"}>\r\n                // {...selectedItem==={all} ? \"\" : `{selected}`}>\r\n                {...selectedItem==={all}} selected >\r\n                {all}\r\n            </MenuItem> )\r\n    }\r\n\r\n\r\n    for(let i = 0; i < arr.length; i++)\r\n    {\r\n        viewSelect.push(         \r\n            <MenuItem value={arr[i][idKey]} key={arr[i][idKey]} \r\n                {...arr[i][idKey]===selectedItem ? `{selected}` : \"\"}>\r\n                {arr[i][valueKey]}\r\n            </MenuItem> \r\n        );\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        paper: {\r\n          padding: theme.spacing(1),\r\n        //   textAlign: \"center\",\r\n        textAlign: \"right\",\r\n          color: theme.palette.text.primary,\r\n        },\r\n        margin: {\r\n          display: 'inline-block',\r\n          margin: '0 50px 0 50px',\r\n        },\r\n  \r\n        select: {\r\n          \"& ul\": {\r\n              backgroundColor: \"#cccccc\",\r\n          },\r\n          \"& li, & p\": {\r\n              fontSize: 12,           \r\n          },        \r\n        },\r\n    }));\r\n  \r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <Select\r\n            name=\"name\"\r\n            labelWidth={100}\r\n            autoWidth={false}\r\n            value={selectedItem}\r\n            onChange={event => {handleSelected(event.target.value)}}\r\n            input={<Input id=\"name\"/>}\r\n            labelWidth={100}\r\n            MenuProps={{ classes: { paper: classes.select } }} \r\n        >\r\n            {viewSelect}\r\n        </Select>     \r\n    )\r\n}\r\nexport default CustomSelect;","\r\nimport \"./Appointments.css\"\r\nimport React, { useMemo } from 'react';\r\nimport { Redirect } from \"react-router-dom\";  \r\nimport AppointmentsTable from \"../../components/AppointmentsTable/AppointmentsTable\";\r\nimport Parse, { User } from 'parse';\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport Appointment from '../../data/Appointment.js';\r\nimport { useParams } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Input, MenuItem, ThemeProvider, Select, CssBaseline, createMuiTheme, Container, ListItem, ListItemText, Button, withStyles, Grid, FormControlLabel, Switch, TextField, Checkbox, Divider, AccordionActions } from \"@material-ui/core\";\r\n//import { DatePicker, KeyboardDatePicker, KeyboardDateTimePicker } from \"@material-ui/pickers\";\r\nimport { MuiPickersUtilsProvider,  KeyboardDatePicker} from '@material-ui/pickers';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { CheckCircleOutlineSharp, ExpandMore } from '@material-ui/icons';\r\nimport { Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\r\n\r\n\r\n//import { withStyles } from '@material-ui/core/styles';\r\n// import { ExpandMore } from '@material-ui/icons';\r\n\r\nimport MuiAccordion from '@material-ui/core/Accordion';\r\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport CustomSelect from \"../../components/CustomSelect/CustomSelect\";\r\nimport RedirectComponent from \"../../components/LoginComponent/RedirectComponent/RedirectComponent\";\r\nimport { getDateOnly } from \"../../Utils/Utils\";\r\n\r\n//import { AccordionActions, Button, Divider } from '@material-ui/core';\r\n\r\n\r\n\r\nfunction Appointments (props)\r\n{\r\n\r\n    const {activeUser, jobs, employees} = props;\r\n    const [freeAppointments, setFreeAppointments] = useState([]);  \r\n    const [selectedJob, setSelectedJob] = useState(\"\");\r\n    const [selectedDoctor, setSelectedDoctor] = useState(\"\");\r\n    // const [selectedBirthDate, setSelectedBirthDate] = useState(new Date());\r\n    const [selectedBirthDate, setSelectedBirthDate] = useState(\"\");\r\n    const [zeutInput, setZeutInput] = useState(\"\");\r\n    const [panel1Filled, setPanel1Filled] = useState(false);\r\n    const [panel1Hide, setPanel1Hide] = useState(false);\r\n    const [panel2Hide, setPanel2Hide] = useState(false);\r\n    const [panel3Hide, setPanel3Hide] = useState(false);\r\n    const [selectedApp, setSelectedApp] = useState(\"\");\r\n    const [doRedirect, setDoRedirect] = useState(false);\r\n    const [currentUser, setCurrentUser] = useState(\"\");\r\n    \r\n\r\n\r\n    // if (doRedirect && !activeUser)\r\n    // {\r\n    //   return <Redirect to=\"/RegistrationPage\"/>\r\n    // }\r\n\r\n\r\n    const handleDateChange = (date) => {\r\n      setSelectedBirthDate(date);\r\n\r\n      if(date !== null && date !== \"\" && selectedJob !== \"\")\r\n        setPanel1Filled(true);\r\n      else\r\n        setPanel1Filled(false);\r\n    };\r\n\r\n    function inputZeutHandle(e)\r\n    {\r\n        setZeutInput(e.target.value);\r\n      // setShowWarning(false);\r\n    }\r\n\r\n    function handleStage1() \r\n    {\r\n      setPanel1Hide(true);\r\n      setExpandedPanel('panel2');\r\n    }   \r\n\r\n    function handleSelectedRow(appId)\r\n    {\r\n      setSelectedApp(appId);\r\n      setPanel2Hide(true);\r\n      setExpandedPanel('panel3');\r\n    }\r\n\r\n    function handleStage3()\r\n    {\r\n\r\n      setPanel3Hide(true);\r\n      setExpandedPanel('panel4');\r\n      const currentUser = isRegisteredUser();\r\n      console.log(\"currentUser  \" + currentUser);\r\n      if(!currentUser)\r\n        setDoRedirect(true);\r\n    }\r\n\r\n\r\n    const {selectedJobHome} = useParams();\r\n\r\n    useEffect( ()=> {\r\n        async function fetchData(){\r\n          const parseAppointment = Parse.Object.extend('Appointment');\r\n          const query = new Parse.Query(parseAppointment);\r\n          query.exists(\"doctorId\");\r\n          query.greaterThanOrEqualTo(\"appDateTime\", new Date());\r\n          query.equalTo(\"pacientId\", null);\r\n          query.addAscending(\"appDateTime\");  \r\n\r\n          query.find().then((parseAppointment) => {\r\n            const allAppointments = parseAppointment.map(appointment => new Appointment(appointment));\r\n            setFreeAppointments(allAppointments);             \r\n          }, (error) => {\r\n            console.error('Error while fetching Appointment', error);\r\n          });\r\n        }\r\n        \r\n        if(jobs.length > 0)\r\n        {\r\n          selectedJobHome ? setSelectedJob(selectedJobHome) : setSelectedJob(jobs[0].jobId);\r\n          fetchData();\r\n        }\r\n\r\n    },[jobs]);\r\n\r\n    function getAppointmentsByJob(appointments) \r\n    {\r\n      let temp = [];\r\n      const employeeNum = employees.find(item => item.doctorId === selectedDoctor);\r\n\r\n      if (employeeNum != undefined && selectedDoctor !== \"\")\r\n      {\r\n        for(let i = 0; i < appointments.length; i++)\r\n        {\r\n          if(appointments[i].doctorId.id === selectedDoctor)\r\n              temp = temp.concat(appointments[i]);\r\n         }\r\n        return temp;\r\n      }\r\n      \r\n      const employeesWithSelectedType = employees.filter(item => item.jobId === selectedJob);\r\n\r\n      for(let i = 0; i < appointments.length; i++)\r\n      {\r\n        for(let j = 0; j < employeesWithSelectedType.length; j++)\r\n          {\r\n            if(appointments[i].doctorId.id === employeesWithSelectedType[j].doctorId)\r\n                temp = temp.concat(appointments[i]);\r\n          }      \r\n      }\r\n      return temp;\r\n    }\r\n\r\n    const appointmentsToDisplay = getAppointmentsByJob(freeAppointments);\r\n\r\n    async function takeAnAppointment()\r\n    {\r\n      //const isRegistered = isRegisteredUser();\r\n\r\n        const index = freeAppointments.findIndex(item => item.id === selectedApp);\r\n        let temp = [...freeAppointments];\r\n        // remove appointment at index 'index' from array\r\n        temp.splice(index, 1);\r\n\r\n        const pAppointment = Parse.Object.extend('Appointment');\r\n        const query = new Parse.Query(pAppointment);\r\n        const pApp = await query.get(selectedApp);\r\n\r\n        pApp.set('pacientId', Parse.User.current());\r\n        pApp.set('updatedBy',Parse.User.current());\r\n        const savedApp = await pApp.save();\r\n\r\n        const updatedApp = new Appointment (savedApp);\r\n        setFreeAppointments(temp);\r\n\r\n    }\r\n\r\n    async function isRegisteredUser()\r\n    {\r\n      const userQuery = new Parse.Query(Parse.User);\r\n      userQuery.equalTo(\"tzeut\", zeutInput); \r\n     // userQuery.equalTo(\"birthdate\", getDateOnly(selectedBirthDate)); \r\n      const currUser = await userQuery.find();\r\n      if (currUser.length !== 0)\r\n      {\r\n        //setCurrentUser(new User(currUser, \"\"));\r\n      }\r\n\r\n      return (currUser.length !== 0);\r\n    }\r\n\r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n      paper: {\r\n        padding: theme.spacing(1),\r\n        textAlign: \"center\",\r\n        color: theme.palette.text.primary,\r\n      },\r\n      margin: {\r\n        display: 'inline-block',\r\n        margin: '0 50px 0 50px',\r\n      },\r\n      show: {\r\n        display: 'block',\r\n      },\r\n      hide: {\r\n        display: 'none',\r\n      },\r\n      select: {\r\n        \"& ul\": {\r\n            backgroundColor: \"#cccccc\",\r\n        },\r\n        \"& li, & p\": {\r\n            fontSize: 12,           \r\n        },        \r\n    },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n  const StyledButton = withStyles({\r\n    root: {\r\n      background:'rgb(63, 81, 181)',  // \"#3f51b5\",\r\n      borderTopLeftRadius: \"15px\",\r\n      borderBottomRightRadius: \"15px\",\r\n      border: 0,\r\n      color: 'white',\r\n      height: 60,\r\n      width: 200,\r\n      padding: '0 30px',\r\n\r\n      boxShadow: '0 3px 5px 2px rgba(63, 81, 181, .3)',\r\n      margin: '0 50px 0 50px',\r\n    },\r\n    label: {\r\n      textTransform: 'capitalize',\r\n    },\r\n    \"&:hover\": {\r\n      //you want this to be the same as the backgroundColor above\r\n      backgroundColor: 'rgb(63, 81, 181)',\r\n    },\r\n    // \"&:hover\": {\r\n    //   backgroundColor:'black',\r\n    // },\r\n \r\n  })(Button);\r\n\r\n  const DisableddButton = withStyles({\r\n    root: {\r\n      borderTopLeftRadius: \"15px\",\r\n      borderBottomRightRadius: \"15px\",\r\n      border: '2px solid blue',\r\n      color: 'blue',\r\n      height: 60,\r\n      width: 200,\r\n      padding: '0 30px',\r\n      margin: '0 50px 0 50px',\r\n    },\r\n    label: {\r\n      textTransform: 'capitalize',\r\n    },\r\n  })(Button);\r\n\r\n\r\n\r\n\r\n\r\n  const Accordion = withStyles({\r\n    root: {\r\n      border: '1px solid rgba(0, 0, 0, .125)',\r\n      boxShadow: 'none',\r\n      borderRadius: '30px 0px 30px 0',\r\n      '&:not(:last-child)': {\r\n        borderBottom: 0,\r\n      },\r\n      '&:before': {\r\n        display: 'none',\r\n      },\r\n      '&$expanded': {\r\n        margin: 'auto',\r\n      },\r\n    },\r\n    expanded: {},\r\n  })(MuiAccordion);\r\n  \r\n  const AccordionSummary = withStyles({\r\n    root: {\r\n//      backgroundColor: '#21CFFF',\r\n //     backgroundColor: 'transparent',\r\n      backgroundColor: 'inherit',\r\n//      borderBottom: '1px solid #12738E',\r\n      marginBottom: -1,\r\n //     color: '#666666',\r\n //     borderRadius: '30px 0px 30px 0',\r\n      minHeight: 56,\r\n      '&$expanded': {\r\n        minHeight: 56,\r\n      },\r\n    },\r\n    content: {\r\n      '&$expanded': {\r\n        margin: '12px 0',\r\n      },\r\n    },\r\n    expanded: {},\r\n  })(MuiAccordionSummary);\r\n  \r\n  \r\n  const AccordionDetails = withStyles((theme) => ({\r\n    root: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  }))(MuiAccordionDetails);\r\n\r\n\r\n\r\n  const [expandedPanel, setExpandedPanel] = useState(false);\r\n\r\n  const handleAccordionChange = (panel) => (event, isExpanded) => {\r\n   // console.log({ event, isExpanded });\r\n    setExpandedPanel(isExpanded ? panel : false);\r\n  };\r\n\r\n\r\n  const employeesBySelectedType = employees.filter(item => item.jobId === selectedJob);\r\n\r\n  function HandleStart() \r\n  {\r\n    setExpandedPanel('panel1');\r\n  }\r\n\r\n      let viewSelect = []; \r\n      for(let i = 0; i < jobs.length; i++)\r\n      {\r\n          viewSelect.push(         \r\n            <MenuItem value={jobs[i].jobId} key={jobs[i].jobId} \r\n              {...jobs[i].jobId===selectedJob ? \"selected\" : \"\"}>\r\n                {jobs[i].jobHebrew}\r\n            </MenuItem> \r\n            );\r\n      }\r\n\r\n    const clNamePanel1 = panel1Hide ? classes.hide : classes.paper;\r\n    const clNamePanel2 = panel2Hide ? classes.hide : classes.paper;\r\n    const clNamePanel3 = panel3Hide ? classes.hide : classes.paper;\r\n    \r\n\r\n    return(\r\n        <>\r\n            {/* <h1>שלום   { (activeUser) ? activeUser.fname : \"no user\"}</h1> */}\r\n\r\n\r\n            <Grid container justify=\"space-around\" spacing={3} >\r\n            {/*   From 0 to 600px wide (smart-phones), I take up 12 columns, or the whole device width!\r\n                  From 600-690px wide (tablets), I take up 6 out of 12 columns, so 2 columns fit the screen.\r\n                  From 960px wide and above, I take up 25% of the device (3/12), so 4 columns fit the screen. */}\r\n\r\n\r\n\r\n                <Grid item xs={12} className={classes.paper}>                 \r\n                  <StyledButton onClick={HandleStart} style={{ backgroundColor: 'rgb(63, 81, 181)' }}>תאום תור חדש</StyledButton>\r\n                  <DisableddButton>ביטול תור קיים</DisableddButton>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} className={classes.paper}>\r\n                  <h3>כאן תוכלו לתאם תור</h3>       \r\n                </Grid>  \r\n\r\n\r\n                <Grid item xs={12} className={clNamePanel1}>\r\n                <Accordion expanded={expandedPanel === 'panel1'} disabled={expandedPanel !== 'panel1'} \r\n                      onChange={handleAccordionChange('panel1')}>\r\n                  <AccordionSummary expandIcon={<ExpandMore />}>\r\n                  <h4>1.\tפרטי השירות המבוקש</h4>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n \r\n                  <Grid item xs={12} className={classes.paper}> \r\n                  {jobs.length > 0 ?\r\n                    <div className={classes.margin}>             \r\n                            <span>סוג התור המבוקש    </span>\r\n                            <CustomSelect arr={jobs} selectedItem={selectedJob}  idKey={\"jobId\"} valueKey={\"jobHebrew\"} handleSelected={setSelectedJob} all=\"\"/>\r\n                    </div>\r\n                    : <></>}\r\n                  <div className={classes.margin}> \r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                      variant=\"dialog\"\r\n                      format=\"dd/MM/yyyy\"\r\n                      value={selectedBirthDate}\r\n                      onChange={handleDateChange}\r\n                      maxwidth={40}\r\n                    />\r\n                  </MuiPickersUtilsProvider>\r\n                  </div>\r\n                </Grid>\r\n                \r\n                  </AccordionDetails>\r\n\r\n                  <Divider />\r\n                  <AccordionActions>\r\n                  <Grid item xs={12}> \r\n                    {/* <div className={classes.margin}>  */}\r\n                      <Button size=\"small\" variant=\"contained\" disabled={!panel1Filled} color=\"primary\" onClick={handleStage1}>\r\n                      המשך לבחירת תור\r\n                      </Button>\r\n                      {/* </div> */}\r\n                      </Grid>\r\n                  </AccordionActions>                  \r\n                </Accordion>\r\n                </Grid>  \r\n\r\n                <Grid item xs={12} className={clNamePanel2}>\r\n                  <Accordion expanded={expandedPanel === 'panel2'} disabled={expandedPanel !== 'panel2'}\r\n                       onChange={handleAccordionChange('panel2')}>\r\n                  <AccordionSummary expandIcon={<ExpandMore />}>\r\n                  <h4>2.\tבחירת תור</h4>\r\n                  </AccordionSummary>\r\n                    <AccordionDetails>\r\n  \r\n                    <Grid item xs={12} className={classes.margin} align=\"right\">\r\n                      <Grid item xs={12} className={classes.margin} align=\"right\">\r\n                        <p MenuProps={{ classes: { paper: classes.select } }} >להלן מועדי התורים הקרובים ביותר ע\"פ הבחירה שביצעתם.</p>     \r\n                        <p> אנא בחרו את התור המועדף</p>  \r\n                      </Grid>\r\n                        <Grid item xs={12} className={classes.margin} align=\"right\">\r\n                          {jobs.length > 0 ?\r\n                          <div className={classes.margin}> \r\n                            <p>בחירת רופא</p>\r\n                            <CustomSelect arr={employeesBySelectedType} selectedItem={selectedDoctor}  idKey={\"doctorId\"} valueKey={\"fullName\"} handleSelected={setSelectedDoctor} all=\"כל הרופאים\"/>                          \r\n                          </div>\r\n                          : <></>}\r\n                        </Grid>\r\n                                            \r\n                      {appointmentsToDisplay.length > 0 ?\r\n                        <AppointmentsTable appointments={appointmentsToDisplay}  fromScreen=\"appoint\" takeApp={handleSelectedRow}/>\r\n                      :\r\n                        <h2 style={{color: 'blue'}}>סליחה, כרגע אין אפשרות להזמין תור</h2>\r\n                      }   \r\n                      </Grid>             \r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                </Grid>  \r\n\r\n                <Grid item xs={12} className={clNamePanel3}>\r\n                  <Accordion expanded={expandedPanel === 'panel3'} disabled={expandedPanel !== 'panel3'}\r\n                          onChange={handleAccordionChange('panel3')}>\r\n                    <AccordionSummary expandIcon={<ExpandMore />}>\r\n                      <h4>3.  מילוי פרטים אישיים</h4>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <Grid item xs={12} className={classes.margin} align=\"right\">\r\n                        <p>אנא מלאו את הפרטים הבאים</p>  \r\n                      </Grid> \r\n\r\n                      {/* <StylesProvider jss={jss}> */}\r\n                        <Grid item xs={12}  dir=\"rtl\">                   \r\n                            <TextField  fullWidth label=\"ת.ז. של בעל התור *\"  value={zeutInput} name=\"tzeut\" size=\"small\" variant=\"outlined\" onChange={inputZeutHandle} />\r\n                        </Grid>\r\n                      {/* </StylesProvider>                    */}\r\n\r\n                    </AccordionDetails>\r\n\r\n                    {/* <Divider /> */}\r\n                    <AccordionActions>\r\n                    <Grid item xs={12}> \r\n                        <Button size=\"small\" variant=\"contained\" disabled={zeutInput===\"\"} color=\"primary\" onClick={handleStage3}>\r\n                          המשך\r\n                        </Button>\r\n                      </Grid>\r\n                    </AccordionActions>                  \r\n                  </Accordion>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} className={classes.paper}>\r\n                  <Accordion expanded={expandedPanel === 'panel4'} disabled={expandedPanel !== 'panel4'}\r\n                          onChange={handleAccordionChange('panel4')}>\r\n                  <AccordionSummary expandIcon={<ExpandMore />}>\r\n                  <h4>4.  אשר את פרטי התור</h4>\r\n                  </AccordionSummary>\r\n                    <AccordionDetails>\r\n  \r\n                    <Grid item xs={12} className={classes.margin} align=\"right\">\r\n                      <Grid item xs={12} className={classes.margin} align=\"right\">\r\n                        <h5 >כדי שנוכל לתאם את התור עבורך אנא אשר את הפרטים:</h5>     \r\n                        <p> ת.ז של בעל התור: {currentUser.tzeut}</p>  \r\n                        <p> תאריך לידה: {currentUser.birthdate}</p> \r\n                        <p> שם פרטי: {currentUser.fname}</p> \r\n                        <p> שם משפחה: {currentUser.lname}</p> \r\n                      </Grid>\r\n \r\n                    </Grid>             \r\n                    </AccordionDetails>\r\n                    <AccordionActions>\r\n                    <Grid item xs={12}> \r\n                        <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={takeAnAppointment}>\r\n                        אשר\r\n                        </Button>\r\n                      </Grid>\r\n                    </AccordionActions>                           \r\n                  </Accordion>\r\n                </Grid>  \r\n                               \r\n            </Grid>\r\n         </>\r\n    )\r\n}\r\nexport default Appointments;","\nimport './App.css';\nimport PersonalArea from './pages/PersonalArea/PersonalArea';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport HomePage from './pages/HomePage/HomePage';\nimport WorkArea from './pages/WorkArea/WorkArea';\nimport DentalNavBar from './components/DentalNavBar';\nimport { useEffect, useState } from 'react';\nimport User from './data/User';\nimport ContactUs from './pages/ContactUs/ContactUs';\nimport About from './pages/About/About';\nimport Appointment from './data/Appointment';\nimport Appointments from './pages/Appointments/Appointments';\nimport {getDateOnly} from './Utils/Utils.js';\nimport Parse from 'parse';\nimport { CircularProgress } from '@material-ui/core';\n\n\nfunction App() {\n const [activeUser, setActiveUser] = useState(null);\n const [jobArray, setJobArray] = useState([]);\n const [employeeArray, setEmployeeArray] = useState([]);\n //const [loading, setLoading] = useState(false);\n\n  // let appointments = [\n  //   new Appointment(\"1\", \"2021-01-19 08:34:56\",\"c0m8khpWrn\", \"pMUKng8lhG\", \"המטופל הגיע עקב כאבי שיניים, לאחר בדיקה התגלה חור בשן 8 בצד ימין עליון. בוצעה עקירה\", \"\", \"2005-02-12 12:34:56\"),\n  //   new Appointment(\"2\", \"2021-01-19 18:42:56\",\"c0m8khpWrn\", \"pMUKng8lhG\", \"המטופל הגיע לטיפול הלבנת שינייים, ההלבנה בוצעה בהצלחה\", \"\", \"2005-02-22 12:34:56\"),\n  //   new Appointment(\"3\", \"2021-01-12 12:34:56\",\"c0m8khpWrn\", \"pMUKng8lhG\", \"המטופל הגיע עקב שבירת שן 1 ימין, המטופל שמר את השן בתוך כוס עם חלב עד רגע ההגעה למרפאה, השבר טופל והשן חוברה למקומה בהצלחה\", \"\", \"2005-02-22 12:34:56\"),\n  //   new Appointment(\"4\", \"2021-01-19 12:36:56\",\"c0m8khpWrn\", \"pMUKng8lhG\", \"למטופל בוצעה עקירה כירורגית של שן בינה\", \"\", \"2005-02-22 12:34:56\"),\n  //   new Appointment(\"5\", \"2021-01-22 13:10:56\",\"4\", \"pMUKng8lhG\", \"המטופלת הגיעה לשם קבלת חוות דעת על השתלת שיניים, חוות הבדעת היחא חיובי, ניתן לבצע השתלה. התור נקבע לחודש הבא\", \"\", \"2005-02-22 12:34:56\"),\n  //   new Appointment(\"6\", \"2021-01-18 13:04:56\",\"6\", \"pMUKng8lhG\", \"המטופל בן ה-6 הגיע עם אימו, אימו התלוננה על כך שהילד לא מבין את חשיבות צחצוח השיניים. בוצעה עבודת הסברה \", \"\", \"2005-02-22 12:34:56\"),\n  //   new Appointment(\"7\", \"2021-01-22 13:08:56\",\"7\", \"pMUKng8lhG\", \"המטופלת בת 12, אמרה שחשה בושה עקב רווח בין השיניים הקידמיות, בוצעה תבנית גבס של השיניים והוחלט על המשך טיםול של יישור שיניים. נקבעה פגישה נוספת\", \"\", \"2005-02-22 12:34:56\"),\n  //   new Appointment(\"8\", \"2021-01-21 13:20:56\",\"7\", \"\", \"המטופל בן 20 שהגיע עקב תזוזה של שיניים לאחר שלפני מספר שנים עשה תהליך של יישור שיניים. מבדיקה עלה שהשיניים זזו עקב בקיעת שיני בינה, הופנה לכירורג לשם עקירה ולאחר מכן התבקש לקבוע תור נוסף לשם המשך טיפול \", \"\", \"2005-02-22 12:34:56\"),\n  //   new Appointment(\"9\", \"2021-01-22 13:40:56\",\"8\", \"\", \"\", \"המטופל הגיע לבדיקת חצי-שנתית שגרתית. בוצעה הסרת אבנית\", \"2005-02-22 12:34:56\"),\n  //   new Appointment(\"10\", \"2021-01-22 13:50:56\",\"7\", \"\", \"מטופלת בת 16 הגיעה לשם קבלת ייעוץ ליישור שיניים. בוצעה בדיקה ונמצא מנשך לא תקין, כמו כן נמצא שלא כל השיניים הקבועות בקעו. הוחלט על טיפול מיידי, המטופלת קיבלה הוראה לבצע צילום שינים בתור דבר ראשון\", \"\", \"2005-02-22 12:34:56\"),\n  //   new Appointment(\"11\", \"2021-01-19 13:50:56\",\"c0m8khpWrn\", \"2\", \"\", \"\", \"2005-02-22 12:34:56\")\n  // ]\n\n\n  useEffect(()=>{\n    let isCancelled = false;\n\n    // Prepare job array\n    async function getJobs(){\n      const job = Parse.Object.extend('job');\n      const jobQuery = new Parse.Query(job);\n      const JobList = await jobQuery.find();\n      \n      if (!isCancelled) {\n        let jobs = [];\n        JobList.forEach(item => {\n          const job =  \n            {  \n                jobId: item.id,\n                jobStr: item.get(\"job\"),\n                jobHebrew: item.get(\"jobHebrew\")\n            }\n            jobs = jobs.concat(job);\n        });\n        setJobArray(jobs); \n      }\n      return true;\n    }\n\n    // Prepare doctors array\n    async function fetchEmployee() {\n      const userQuery = new Parse.Query(Parse.User);\n      userQuery.exists(\"jobId\");\n      const employeeList = await userQuery.find();\n      \n      if (!isCancelled) { \n        let employees = [];\n        employeeList.forEach(item => {\n          const employee =  \n            {  \n                doctorId: item.id,\n                fname: item.get(\"fname\"),\n                lname: item.get(\"lname\"),\n                fullName: item.get(\"fname\") + \" \" + item.get(\"lname\"),\n                jobId: item.get(\"jobId\").id,\n            }\n            employees = employees.concat(employee);\n        });\n        setEmployeeArray(employees);\n      }\n      return true;\n    } \n\n    getJobs();\n    fetchEmployee();\n\n    return () => {\n      isCancelled = true;\n    };\n\n  }, [])\n\n  function handleLogout ()\n  {\n    setActiveUser(null);\n    Parse.User.logOut();\n  } \n  const handleLogin = (logedUser) => setActiveUser(logedUser);\n\n  return (\n//    (!loading) ? \n    <>  \n    {console.log(\"jobArr  \"+jobArray.length )} \n      <DentalNavBar   activeUser={activeUser} onLogout={handleLogout}/>\n      <div className=\"p-app\">\n          <HashRouter>\n            <Switch>\n              <Route exact path=\"/\"><HomePage  activeUser={activeUser} onLogin={handleLogin}/></Route>\n              <Route exact path=\"/personal\"><PersonalArea activeUser={activeUser} employeeArray={employeeArray}/></Route>\n              <Route exact path=\"/personal/:id\"><PersonalArea activeUser={activeUser} employeeArray={employeeArray}/></Route>\n              <Route exact path=\"/appointments\"><Appointments activeUser={activeUser} jobs={jobArray} employees={employeeArray} /></Route>\n              <Route exact path=\"/appointments/:selectedJobHome\"><Appointments activeUser={activeUser} jobs={jobArray} employeeArray={employeeArray} /></Route>\n              <Route exact path=\"/work\"><WorkArea  activeUser={activeUser} /></Route>\n              <Route exact path=\"/contactus\"><ContactUs activeUser={activeUser}/></Route>\n              <Route exact path=\"/about\"><About  activeUser={activeUser}/></Route>\n            </Switch>\n          </HashRouter>\n      </div>\n    </>  \n    // :\n    // <> \n    //   <CircularProgress\n    //             size={40}\n    //             left={-20}\n    //             top={10}\n    //             status={'loading'}\n    //             style={{marginLeft: '50%'}}\n    //             />\n    // </> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Parse from 'parse';\n\nParse.serverURL = 'https://parseapi.back4app.com';\nParse.initialize(\n  'Mbflpmm7DVC8u5WfdjJ2zU6Wa5KlR9F7hJv6qZyc', // This is your Application ID\n  'qvEonIcPCSyoVZDxvhJtbyGkPVyvoD8EpHJFfnJK', // This is your Javascript keynpm start\n  \n);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}