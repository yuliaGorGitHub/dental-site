[{"C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\index.js":"1","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\App.js":"2","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\reportWebVitals.js":"3","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\pages\\PersonalArea\\PersonalArea.js":"4","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\pages\\HomePage\\HomePage.js":"5","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\pages\\WorkArea\\WorkArea.js":"6","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\components\\DentalNavBar.js":"7","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\components\\LoginComponent\\LoginComponent.js":"8","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\data\\User.js":"9","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\pages\\ContactUs\\ContactUs.js":"10","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\pages\\About\\About.js":"11","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\data\\Appointment.js":"12","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\pages\\Appointments\\AppointMents.js":"13","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\components\\AppointmentsTable\\AppointmentsTable.js":"14","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\Utils\\Utils.js":"15","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\components\\CollapsibleRow\\CollapsibleRow.js":"16","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\components\\CustomMaterialPagination.js":"17","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\components\\Modal\\Modal.js":"18","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\pages\\Appointments\\Appointments.js":"19","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\components\\LoginComponent\\RedirectComponent\\RedirectComponent.js":"20"},{"size":767,"mtime":1610881829904,"results":"21","hashOfConfig":"22"},{"size":7086,"mtime":1611503489024,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":4475,"mtime":1611503348312,"results":"25","hashOfConfig":"22"},{"size":1345,"mtime":1611478344879,"results":"26","hashOfConfig":"22"},{"size":5016,"mtime":1611495267036,"results":"27","hashOfConfig":"22"},{"size":2617,"mtime":1610926149481,"results":"28","hashOfConfig":"22"},{"size":4742,"mtime":1611118341469,"results":"29","hashOfConfig":"22"},{"size":654,"mtime":1611055792856,"results":"30","hashOfConfig":"22"},{"size":201,"mtime":1610445228282,"results":"31","hashOfConfig":"22"},{"size":187,"mtime":1610444965856,"results":"32","hashOfConfig":"22"},{"size":2067,"mtime":1611166544900,"results":"33","hashOfConfig":"22"},{"size":2057,"mtime":1611054097856,"results":"34","hashOfConfig":"22"},{"size":3758,"mtime":1611065384951,"results":"35","hashOfConfig":"22"},{"size":96,"mtime":1611503727279,"results":"36","hashOfConfig":"22"},{"size":6836,"mtime":1611494981020,"results":"37","hashOfConfig":"22"},{"size":2460,"mtime":1610730180219,"results":"38","hashOfConfig":"22"},{"size":3901,"mtime":1611493900295,"results":"39","hashOfConfig":"22"},{"size":3802,"mtime":1611503675400,"results":"40","hashOfConfig":"22"},{"size":2043,"mtime":1611478285093,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"jehyuy",{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":1,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"44"},"C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\index.js",[],["94","95"],"C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\App.js",["96","97","98","99"],"C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\reportWebVitals.js",[],"C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\pages\\PersonalArea\\PersonalArea.js",["100","101","102","103"],"C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\pages\\HomePage\\HomePage.js",["104","105"],"import { Grid } from \"@material-ui/core\";\r\nimport { SignalCellularNoSimOutlined } from \"@material-ui/icons\";\r\nimport { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport LoginComponent from \"../../components/LoginComponent/LoginComponent\";\r\nimport RedirectComponent from \"../../components/LoginComponent/RedirectComponent/RedirectComponent\";\r\nimport \"./HomePage.css\"\r\n\r\n\r\nfunction HomePage (props)\r\n{\r\n    const {activeUser, users, onLogin} = props;\r\n\r\n    const [doRedirect, setDoRedirect] = useState(false);\r\n\r\n    function redirectOnLogin(user)\r\n    {\r\n        onLogin(user);\r\n        setDoRedirect(true);\r\n    }\r\n\r\n    if (doRedirect && activeUser)\r\n    {\r\n        if (activeUser.job)\r\n            return <Redirect to=\"/work\"/>\r\n        else   \r\n            return <Redirect to=\"/personal\"/>\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"p-home\">\r\n            <p>Home Page</p>\r\n            <Grid container spacing={1}  >\r\n                <Grid container item xs={12} spacing={3}>\r\n                {/* <FormRow> */}\r\n                    <LoginComponent activeUser={activeUser} onLogin={redirectOnLogin} />\r\n                    <RedirectComponent activeUser={activeUser} />\r\n                    {/* </FormRow> */}\r\n                </Grid>\r\n            </Grid>\r\n         </div>\r\n    )\r\n}\r\nexport default HomePage;","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\pages\\WorkArea\\WorkArea.js",["106","107","108","109","110","111","112","113","114","115"],"import { Redirect } from \"react-router-dom\";\r\nimport AppointmentsTable from \"../../components/AppointmentsTable/AppointmentsTable\";\r\nimport React, { Component, useMemo, useState, useEffect } from \"react\";\r\nimport Modal from \"../../components/Modal/Modal\";\r\nimport \"./WorkArea.css\"\r\nimport Appointment from \"../../data/Appointment\";\r\nimport Parse from 'parse';\r\n\r\nfunction WorkArea (props)\r\n{\r\n    const {activeUser, appointments} = props;\r\n    const [showModal, setShowModal] = React.useState(false);\r\n    const [selectedRow, setSelectedRow] = React.useState(-1);\r\n    const [workerAppointments, setWorkerAppointments] =  React.useState([]);\r\n  \r\n    const [comment, setComment] = React.useState(null);\r\n\r\n    useEffect(()=> {\r\n\r\n        async function fetchData() {\r\n           const parseAppointment = Parse.Object.extend('Appointment');\r\n           const query = new Parse.Query(parseAppointment);\r\n           query.exists(\"pacientId\");\r\n           query.equalTo(\"doctorId\", Parse.User.current());\r\n           query.addAscending(\"appDateTime\");  \r\n           const pAppointment = await query.find();\r\n         \r\n           const workerAppointments = pAppointment.map(appointment => new Appointment(appointment));\r\n           const appointmentsWitPacientName = await setPacientName( workerAppointments)\r\n           setWorkerAppointments(appointmentsWitPacientName);\r\n\r\n        }\r\n        async function fetchPacient( appointment) {\r\n                    const userQuery = new Parse.Query(Parse.User);\r\n                    userQuery.equalTo(\"objectId\", appointment.pacientId.id);\r\n                    const pacient = await userQuery.get(appointment.pacientId.id) \r\n                    appointment.pacientName = pacient.get(\"fname\") +\" \"+ pacient.get(\"lname\");                  \r\n        } \r\n\r\n        async function setPacientName ( appointments) {\r\n            for (const appointment of appointments) {\r\n                const userQuery = new Parse.Query(Parse.User);\r\n                const pacient = await userQuery.get(appointment.pacientId.id) \r\n                appointment.pacientName = pacient.get(\"fname\")  +\" \"+ pacient.get(\"lname\");\r\n            }\r\n            return appointments;\r\n        }         \r\n         \r\n        if (activeUser) {\r\n            fetchData();\r\n            }       \r\n      \r\n\r\n   },[activeUser]);\r\n\r\n\r\n    const handleModal = () => setShowModal(!showModal)\r\n\r\n    function getCommentFromSelectedRow()\r\n    {\r\n        if( workerAppointments.length > 0)\r\n        {\r\n            const getSelectedRow = workerAppointments.find(item => item.id === selectedRow);\r\n            return getCommentFromSelectedRow = getSelectedRow == undefined ? \"\" : getSelectedRow.comments.replace('/\\n/g', '&#13;&#10;');\r\n        }\r\n\r\n    }\r\n    \r\n    // if selected row was not changed that comment not needed to be changed also\r\n    const comments = useMemo(() => getCommentFromSelectedRow(), [selectedRow, workerAppointments]);\r\n\r\n    function getIndexOfSelected(selectedRow)\r\n    {\r\n        return workerAppointments.findIndex(item => item.id === selectedRow);\r\n\r\n    } \r\n\r\n    async function addComment(comment) \r\n    {\r\n        //console.log(\"selectedRow  \"+ selectedRow);\r\n        const index = workerAppointments.findIndex(item => item.id === selectedRow);\r\n        let temp = [...workerAppointments];\r\n\r\n        // remove appointment at index 'index' from array\r\n        temp.splice(index, 1);\r\n\r\n\r\n       const pAppointment = Parse.Object.extend('Appointment');\r\n       const query = new Parse.Query(pAppointment);\r\n       const pApp = await query.get(selectedRow);\r\n        // get old comment and append new comment\r\n       const curDate = new Date();\r\n       const arr = curDate.toString().split(\" \");\r\n       const time = arr[4].substring(0, 5);\r\n       const prev = pApp.get('comments');\r\n       pApp.set('comments', prev +\"\\n\" + time + \"\\n\" + comment);\r\n\r\n       pApp.set('updatedBy', Parse.User.current());\r\n       const savedApp = await pApp.save();\r\n\r\n       const updatedApp = new Appointment (savedApp);\r\n\r\n       // insert updated appointment to array \r\n       temp.splice(index, 0, updatedApp);\r\n\r\n       setWorkerAppointments(temp);\r\n    }\r\n\r\n    if(!activeUser || !activeUser.job)\r\n        return <Redirect to=\"/\"/>\r\n\r\n    return(\r\n        <>\r\n            <p>today {workerAppointments.length}</p>\r\n            <h3> שלום   { activeUser ?  activeUser.jobStr+\" \"+activeUser.fname  : \"\"} </h3>\r\n            <p>Work Area</p>\r\n            {workerAppointments && workerAppointments.length > 0 ?\r\n            <>\r\n             <AppointmentsTable appointments={workerAppointments} fromScreen=\"work\" setShowModal={handleModal} setSelectedRow={setSelectedRow}/>\r\n             <Modal show={showModal} handleClose={handleModal} handleComment={addComment} children={comments}   />\r\n             </>\r\n           :\r\n            <>\r\n             <p>אין לך תורים להיום</p>\r\n            <p>קח ילדים לחופש!</p>\r\n            </>}\r\n        </>\r\n    )\r\n}\r\nexport default WorkArea;","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\components\\DentalNavBar.js",["116","117","118","119","120"],"import { AppBar, Container, HomeIcon, Button, IconButton, Toolbar, List, ListItem, ListItemText } from \"@material-ui/core\"\r\nimport { Home,  AccessAlarm, ThreeDRotation } from \"@material-ui/icons\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\n\r\nfunction DentalNavBar(props) {\r\n    const {activeUser, onLogout, users} = props; \r\n\r\n\r\n    const useStyles = makeStyles({\r\n        navbarDisplayFlex: { \r\n            display: `flex`,\r\n            justifyContent: `space-between`\r\n        },\r\n        navDisplayFlex: { \r\n            display: `flex`,\r\n            justifyContent: `flex-end`\r\n        },\r\n        linkText: {\r\n          textDecoration: `none`,\r\n          textTransform: `uppercase`,\r\n          color: `white`,\r\n        }\r\n     });\r\n  \r\n    let navLinks = [\r\n\r\n        { title: `צור קשר `, path: `#/contactus`},\r\n        { title: `הצוות הרפואי שלנו`, path: `#/about`},\r\n        { title: `זימון / ביטול תור`, path: `#/appointments`}\r\n    ]\r\n\r\n    if (activeUser)\r\n    {\r\n        if(activeUser.job)\r\n        {\r\n            navLinks = navLinks.concat(\r\n                { title: `איזור עבודה`, path: `#/work` } );\r\n        }\r\n        else\r\n        {\r\n            navLinks = navLinks.concat(\r\n                { title: `איזור אישי`, path: `#/personal`} );\r\n        }\r\n    }\r\n\r\n    const classes = useStyles(); \r\n  \r\n    return (\r\n         <AppBar>\r\n            <Toolbar>\r\n                <Container  maxWidth=\"md\" className={classes.navbarDisplayFlex}>\r\n                < IconButton edge=\"start\"   color=\"inherit\"   aria-label=\"home\"  href=\"#/\"  dir=\"rtl\">\r\n                    <Home fontSize=\"small\" />\r\n                </IconButton >\r\n                <List component=\"nav\" aria-labelledby=\"main navigation\" className={classes.navDisplayFlex} edge=\"end\" >\r\n                    {navLinks.map(({ title, path, onClick }) => (\r\n                    <a href={path} key={title} className={classes.linkText} >\r\n                        <ListItem button>\r\n                        <ListItemText primary={title} />\r\n                        </ListItem>\r\n                    </a>\r\n                    ))}\r\n                    {activeUser ? \r\n                    <a href=\"#/\" className={classes.linkText} onClick={onLogout}>\r\n                        <ListItem button>\r\n                        <ListItemText primary=\"התנתק\" />\r\n                        </ListItem> \r\n                    </a>  \r\n                    : null}\r\n                </List>\r\n                </Container>\r\n            </Toolbar>\r\n         </AppBar>\r\n        )\r\n}\r\nexport default DentalNavBar","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\components\\LoginComponent\\LoginComponent.js",["121","122","123","124","125","126"],"import './LoginComponent.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\nimport { ListItem, ListItemText } from '@material-ui/core';\r\nimport { StylesProvider, sProvider, jssPreset, ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { useEffect, useState } from 'react';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Parse from 'parse';\r\nimport User from '../../data/User';\r\n\r\nfunction LoginComponent (props)\r\n{\r\n    const { activeUser, onLogin} = props;\r\n    const [zeutInput, setZeutInput] = useState(\"\");\r\n    const [pwdInput, setPwdInput] = useState(\"\");\r\n    const [showWarning, setShowWarning] = useState(false);\r\n\r\n\r\n    function checkLogin()\r\n    {\r\n       Parse.User.logIn( zeutInput, pwdInput).then((loguser) => {\r\n\r\n        if(loguser.get('jobId') != null)\r\n        {\r\n            const job = Parse.Object.extend('job');\r\n            const query = new Parse.Query(job);\r\n\r\n            query.get(loguser.get('jobId').id).then(res=>{\r\n               // successful login for worker\r\n               onLogin(new User(loguser, res.get(\"jobHebrew\")));\r\n            })\r\n            .catch(error=>\r\n            {\r\n                console.log(error);\r\n            })\r\n        }\r\n\r\n        else\r\n        {\r\n            // successful login for pacient\r\n            onLogin(new User(loguser, \"\"));\r\n        }\r\n\r\n        }).catch(error => {\r\n            console.error('Error while logging in user', error);\r\n            setShowWarning(true)\r\n        })\r\n    }\r\n\r\n    function inputZeutHandle(e)\r\n    {\r\n        setZeutInput(e.target.value);\r\n        setShowWarning(false);\r\n    }\r\n\r\n    function inputPwdHandle(e)\r\n    {\r\n        setPwdInput(e.target.value);\r\n        setShowWarning(false);\r\n    }\r\n\r\n    // Configure JSS\r\n    const jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            maxWidth: 345,\r\n            [theme.breakpoints.down(\"md\")] : {\r\n                maxWidth: 280\r\n            },\r\n            [theme.breakpoints.down(\"sm\")] : {\r\n                maxWidth: 200\r\n            }\r\n          },        \r\n        container: {\r\n            padding: theme.spacing(3),\r\n            border: \"1px solid blue\",\r\n            borderTopRightRadius: \"25px\",\r\n        },\r\n\r\n        right: {\r\n            display: `flex`,\r\n            justifyContent: `space-around`\r\n        }\r\n  }));\r\n\r\n    const classes = useStyles(); \r\n\r\n    return (\r\n        <Container className={`${classes.container} ${classes.root}`} >\r\n            <h3>כניסה למטופל</h3>\r\n            <form>\r\n                <Grid container spacing={3} className={classes.right}>\r\n                    <Grid item xs={12}>\r\n                       \r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}  dir=\"rtl\">                   \r\n                            {showWarning ? <Alert variant=\"outlined\" severity=\"error\">  \r\n                                                שם משתמש או סיסמא לא תקינים!\r\n                                            </Alert>: null}\r\n\r\n                            </Grid>\r\n                            <StylesProvider jss={jss}>\r\n                                <Grid item xs={12}  dir=\"rtl\">                   \r\n                                    <TextField  fullWidth label=\"תעודת זהות\"  value={zeutInput} name=\"tzeut\" size=\"small\" variant=\"outlined\" onChange={inputZeutHandle} />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField  fullWidth label=\"סיסמא\"  value={pwdInput}  name=\"password\" size=\"small\" type=\"password\" variant=\"outlined\" onChange={inputPwdHandle}/>\r\n                                </Grid>\r\n                            </StylesProvider>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <a href=\"\" >\r\n                        <ListItem button>\r\n                        <ListItemText primary=\"שכחת סיסמא?\" />\r\n                        </ListItem>\r\n                    </a>\r\n                    \r\n                    \r\n                    <Grid item xs={12}>\r\n                        <Button color=\"primary\" fullWidth type=\"button\" variant=\"contained\" onClick={checkLogin}>כניסה</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\nexport default LoginComponent","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\data\\User.js",[],"C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\pages\\ContactUs\\ContactUs.js",["127"],"import \"./ContactUs.css\"\r\n\r\nfunction ContactUs (props)\r\n{\r\n    const {activeUser} = props; \r\n\r\n    return(\r\n        <>\r\n            <p>Contact us</p>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default ContactUs;","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\pages\\About\\About.js",["128"],"import \"./About.css\"\r\n\r\nfunction About (props)\r\n{\r\n    const {activeUser} = props; \r\n\r\n    return(\r\n        <>\r\n            <p>About us</p>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default About;","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\data\\Appointment.js",["129","130","131"],"import Parse from 'parse';\r\n\r\nclass Appointment \r\n{\r\n    constructor(parseAppointment) \r\n    {\r\n        this.daysOfWeek = [\"א\", \"ב\", \"ג\", \"ד\", \"ה\", \"ו\", \"ש\"];\r\n\r\n        this.id = parseAppointment.id;\r\n        this.appDateTime = parseAppointment.get(\"appDateTime\");   // new Date(appDateTime);\r\n        this.doctorId = parseAppointment.get(\"doctorId\");       \r\n        this.doctorName = parseAppointment.get(\"doctorId\") == undefined ? \"\" : parseAppointment.get(\"doctorId\").get(\"fname\") + \" \" + parseAppointment.get(\"doctorId\").get(\"lname\"); \r\n        this.pacientId = parseAppointment.get(\"pacientId\");\r\n        this.pacientName =  parseAppointment.get(\"pacientId\") == undefined ? \"\" : parseAppointment.get(\"pacientId\").get(\"fname\")+ \" \" + parseAppointment.get(\"pacientId\").get(\"lname\"); \r\n        this.comments = parseAppointment.get(\"comments\");        \r\n        this.createdAt =  parseAppointment.get(\"createdAt\");   // new Date(createdAt);\r\n        this.updatedAt =  parseAppointment.get(\"updatedAt\"); \r\n        this.updatedBy = parseAppointment.get(\"updatedBy\");\r\n\r\n\r\n        this.appDuration = 29;  // duration of appointment in minutes\r\n    }\r\n\r\n    // if some months or days of the month are single-digit it adds leading 0 to do them as double-digit.\r\n    pad (n) {\r\n        return n < 10 ? '0' + n : n;\r\n    }\r\n\r\n    get appDate() {\r\n        const date = this.appDateTime.getDate();\r\n        const month = this.appDateTime.getMonth(); \r\n        const year = this.appDateTime.getFullYear();\r\n\r\n        return this.pad(date) + \"/\" + this.pad(month+1) + \"/\" + year;\r\n      }\r\n\r\n    get appStartTime()\r\n    {\r\n        const dateArr = this.appDateTime.toString().split(\" \");\r\n        return dateArr[4].substring(0, 5);\r\n    }\r\n\r\n    get appEndTime()\r\n    {\r\n        const newTimeValue = this.appDateTime.getTime();\r\n        return new Date(newTimeValue + this.appDuration * 60 * 1000);\r\n    }\r\n\r\n    get appWeekDay()\r\n    {\r\n        const newDay = this.appDateTime;\r\n        return this.daysOfWeek[newDay.getDay()];\r\n    }\r\n\r\n}\r\nexport default Appointment;","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\pages\\Appointments\\AppointMents.js",["132","133","134","135","136"],"C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\components\\AppointmentsTable\\AppointmentsTable.js",["137","138","139"],"import './AppointmentsTable.css';\r\nimport React from 'react';  \r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport Paper from '@material-ui/core/Paper';  \r\nimport Table from '@material-ui/core/Table';  \r\nimport TableBody from '@material-ui/core/TableBody';  \r\n import TableCell from '@material-ui/core/TableCell';  \r\nimport TableContainer from '@material-ui/core/TableContainer';  \r\nimport TableHead from '@material-ui/core/TableHead';  \r\nimport TableRow from '@material-ui/core/TableRow';  \r\n//import axios from 'axios';    \r\nimport { useState, useEffect } from 'react'  \r\nimport CollapsibleRow from '../CollapsibleRow/CollapsibleRow';\r\nimport CustomMaterialPagination from '../CustomMaterialPagination';\r\nimport { DepartureBoardOutlined } from '@material-ui/icons';\r\n\r\nfunction AppointmentsTable (props)\r\n{\r\n    const {appointments,fromScreen, returnToList, setShowModal, setSelectedRow} = props;\r\n\r\n    const [page, setPage] = React.useState(0);  \r\n    const [rowsPerPage, setRowsPerPage] = React.useState(3);  \r\n     // const [data, setData] = useState([]);   \r\n\r\n    const handleChangePage = newPage => {  \r\n      setPage(newPage);  \r\n    };  \r\n\r\n    const handleChangeRowsPerPage = num => {  \r\n      setRowsPerPage(num);\r\n      setPage(0);  \r\n    };  \r\n\r\n    const colLbl = (fromScreen === \"appoint\") ?  \"תאום תור\" : (  (fromScreen === \"pActive\") ?  \"ביטול תור\"  : ( fromScreen === \"pHistory\" ? \"צפייה בפרטים\"  : \"שם המטופל\" ) );\r\n\r\n    const useStyles = makeStyles({  \r\n      root: {  \r\n        width: '90%',\r\n        margin: '0 auto', \r\n                            \r\n      },  \r\n      container: {  \r\n        maxHeight: 440, \r\n          \r\n      },         \r\n      padding:    {\r\n          paddingTop: 0,\r\n          paddingBottom: 0,\r\n      },\r\n      right: {\r\n          diraction: \"ltr\", \r\n          textAlign: \"right\",\r\n          align: \"right\"\r\n      },    \r\n      footer: {\r\n          \"& > td > div\": {\r\n              height: 30,\r\n              minHeight: 30\r\n          },\r\n          background: 'linear-gradient(45deg, #D3F7EE 30%, #E4DFD9 90%)',\r\n      }\r\n    }); \r\n\r\n   const classes = useStyles();\r\n\r\n   return(\r\n        <Paper className={classes.root}>  \r\n          <TableContainer className={classes.container}>  \r\n              <Table  aria-label=\"sticky table\">  \r\n                <TableHead>  \r\n                  <TableRow  className={classes.header}>  \r\n                      <TableCell className={classes.padding} align=\"right\">תאריך</TableCell>  \r\n                      <TableCell className={classes.padding} align=\"right\">יום</TableCell>  \r\n                      <TableCell className={classes.padding} align=\"right\">שעה</TableCell>  \r\n                      <TableCell className={classes.padding} align=\"right\">רופא</TableCell>  \r\n                      <TableCell className={classes.padding} align=\"right\">{colLbl}</TableCell>  \r\n                  </TableRow>  \r\n                </TableHead>  \r\n              <TableBody>  \r\n                  {appointments.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row,index) => {  \r\n                      return (  \r\n                        <CollapsibleRow fromScreen={fromScreen} returnToList={returnToList} row={row} index={index} setShowModal={setShowModal}  setSelectedRow={setSelectedRow}/>\r\n                      );  \r\n                  })}  \r\n              </TableBody>  \r\n              </Table>  \r\n          </TableContainer>  \r\n\r\n          <CustomMaterialPagination rowCount={appointments.length} rowsPerPage={rowsPerPage} currentPage={page} \r\n                onChangePage={handleChangePage}  onChangeRowsPerPage={handleChangeRowsPerPage}/>\r\n        </Paper>  \r\n    )\r\n}\r\nexport default AppointmentsTable;","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\Utils\\Utils.js",[],"C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\components\\CollapsibleRow\\CollapsibleRow.js",["140","141","142","143","144"],"import './CollapsibleRow.css';\r\nimport React, { Component } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';   \r\nimport Table from '@material-ui/core/Table';  \r\nimport TableBody from '@material-ui/core/TableBody';  \r\nimport TableCell from '@material-ui/core/TableCell';    \r\nimport TableRow from '@material-ui/core/TableRow'; \r\n//import axios from 'axios';     \r\nimport { Box, Collapse, IconButton, Link, Typography } from \"@material-ui/core\";\r\nimport HowToRegIcon from '@material-ui/icons/HowToReg';\r\nimport PersonAddDisabledIcon from '@material-ui/icons/PersonAddDisabled';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\r\n\r\n\r\n\r\n\r\nfunction CollapsibleRow (props)\r\n{\r\n    const {appointments,fromScreen, returnToList, row, index, setShowModal, setSelectedRow} = props;\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n   \r\n    const useStyles = makeStyles({  \r\n        root: {  \r\n          width: '90%',\r\n          margin: '0 auto',    \r\n        },  \r\n        container: {  \r\n          maxHeight: 440, \r\n        },  \r\n        displayFlex: { \r\n            display: `flex`,\r\n            justifyContent: `space-between`,\r\n            alignItems: \"baseline\",\r\n        },\r\n        padding: {\r\n            paddingTop: 0,\r\n            paddingBottom: 0,       \r\n        },\r\n        //style for font size\r\n        resize:{\r\n            fontSize: 14\r\n      },\r\n        right: {\r\n //           diraction: \"ltr\", \r\n            textAlign: \"right\"\r\n        },\r\n        hover: {\r\n            \"&:hover\": {\r\n            //   backgroundColor: \"#D4F1F4\",\r\n              opacity: \"0.7\"\r\n            }\r\n        },\r\n        even: {\r\n            backgroundColor: '#E3E8E9'            \r\n        },\r\n        odd: {\r\n            backgroundColor: '#DDFFE7'            \r\n        },        \r\n        footer: {\r\n            \"& > td > div\": {\r\n                height: 30,\r\n                minHeight: 30\r\n            },\r\n            backgroundColor: \"grey\",\r\n             height: 30,\r\n             minHeight: 30\r\n        }\r\n     }); \r\n\r\n     const classes = useStyles();\r\n  \r\n      \r\n      function removeApp(id) {\r\n        returnToList(id);\r\n      }\r\n\r\n      function openModal(id)\r\n      {\r\n        setSelectedRow(id);\r\n        setShowModal();\r\n      }\r\n\r\n    return (\r\n\r\n        <>\r\n            <TableRow  key={index} className={`${classes.hover} ${index % 2 ? classes.even :  classes.odd}`}>\r\n                <TableCell key={index} className={`${classes.padding} ${classes.right}`}>{row.appDate}</TableCell>  \r\n                <TableCell key={index} className={`${classes.padding} ${classes.right}`}>{row.appWeekDay}</TableCell>  \r\n                <TableCell key={index} className={`${classes.padding} ${classes.right}`}>{row.appStartTime}</TableCell>  \r\n                <TableCell key={index} className={`${classes.padding} ${classes.right}`}>{row.doctorName}</TableCell>                       \r\n                <TableCell key={index} className={`${classes.padding} ${classes.right}`} value={row.id}>\r\n                {\r\n                    (fromScreen === \"appoint\") ?                                 \r\n                    <IconButton edge=\"start\"  color=\"inherit\"  aria-label=\"create\" dir=\"rtl\" className={classes.padding}  value={row.id} >\r\n                        <HowToRegIcon fontSize=\"small\" color=\"primary\" />\r\n                    </IconButton >   \r\n                    :  (fromScreen === \"work\"  ?\r\n                     <div  className={`${classes.padding} ${classes.displayFlex}`}>\r\n                        <Link href={ `#/personal/${row.pacientId.id}` }  className={classes.resize} >\r\n                            {row.pacientName}\r\n                        </Link>    \r\n                        <IconButton edge=\"start\"  color=\"inherit\"  aria-label=\"create\" dir=\"rtl\" className={classes.padding}\r\n                                    onClick={() => openModal(row.id)}\r\n                                    >  \r\n                            <ImportContactsIcon fontSize=\"small\" color=\"primary\"/>\r\n                        </IconButton > \r\n                       \r\n                     </div>     \r\n\r\n                    : (\r\n                        (fromScreen === \"pActive\") ?                              \r\n                        <IconButton edge=\"start\"  color=\"inherit\"  aria-label=\"create\" dir=\"rtl\" className={classes.padding}\r\n                                    onClick={() => removeApp(row.id)} >  \r\n                            <PersonAddDisabledIcon fontSize=\"small\" color=\"primary\"/>\r\n                        </IconButton > \r\n                        :\r\n                        (\r\n                        fromScreen === \"pHistory\" ?\r\n                        <>\r\n                            <IconButton edge=\"start\"  color=\"inherit\"  aria-label=\"create\" dir=\"rtl\" className={classes.padding}  onClick={() => setOpen(!open)}>  \r\n                            <InfoIcon fontSize=\"small\" color=\"primary\"/>\r\n                            </IconButton > \r\n                           \r\n\r\n                        {/* <IconButton aria-label=\"expand row\"  size=\"small\"  onClick={() => setOpen(!open)} >\r\n                            {open ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\r\n                        </IconButton> */}\r\n\r\n                        </>                                       \r\n                            : \"\"\r\n                        )\r\n                    ))\r\n                }\r\n                </TableCell>  \r\n            </TableRow>  \r\n\r\n            <TableRow  className={`${classes.right} ${index % 2 ? classes.even :  classes.odd}`}>\r\n                <TableCell key={index} className={`${classes.padding} ${classes.right}`} colSpan={5}>\r\n                  <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                    <Box margin={1}>\r\n                      {/* <Typography variant=\"subtitle1\" gutterBottom component=\"div\">\r\n                      סיכום הביקור:\r\n                      </Typography> */}\r\n                      <Table size=\"small\">      \r\n                        <TableBody>\r\n                            <TableRow  key={index}>\r\n                              <TableCell key={index} component=\"th\" scope=\"row\"  align=\"right\">\r\n                              {row.comments}\r\n                              </TableCell>\r\n                            </TableRow>                                                               \r\n                        </TableBody>\r\n                      </Table>\r\n                    </Box>\r\n                  </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n           \r\n        </>\r\n\r\n    )\r\n}\r\nexport default CollapsibleRow;","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\components\\CustomMaterialPagination.js",[],"C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\components\\Modal\\Modal.js",["145"],"import \"./Modal.css\"\r\nimport React, { useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\r\n\r\n// Configure JSS\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nfunction RTL(props) {\r\n  return (\r\n    <StylesProvider jss={jss}>\r\n      {props.children}\r\n    </StylesProvider>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\n// const theme = createMuiTheme({\r\n//     direction: 'rtl',\r\n//   });\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        textAlign: \"right\",\r\n    },\r\n    space: {\r\n        display: `flex`,\r\n        justifyContent: `space-around`,\r\n        paddingTop: 20,\r\n        paddingBottom: 20, \r\n    },\r\n\r\n\r\n\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 450,\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    //style for font size\r\n    resize:{\r\n        fontSize: 12,\r\n        textAlign: \"right\"\r\n    },    \r\n}));\r\n\r\nexport default function Modal( { handleClose, handleComment, show, children }) {\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n\r\n    const [summary , setSummary] = useState(\"\");\r\n\r\n    function closeModal() {\r\n        setSummary(\"\");\r\n        handleClose();\r\n    }\r\n    \r\n    function handleAddComment() {\r\n        handleComment(summary);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <div  dir=\"rtl\">\r\n            <dialog \r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={show}\r\n                onClose={handleClose}\r\n            >\r\n                <div style={modalStyle} className={classes.paper}>\r\n                    <h2>Simple React Modal</h2>\r\n                    <p>\r\n                       {children}\r\n                    </p>\r\n\r\n                    <form className={classes.root} noValidate autoComplete=\"off\">\r\n\r\n                        <TextField  className={classes.resize} \r\n                            label=\"סיכום\"\r\n                            variant=\"filled\"\r\n                            fullWidth={true}\r\n                            rowsMax=\"4\"\r\n                            //variant=\"outlined\" \r\n                            multiline={true}\r\n                            rows={4}\r\n                            InputProps={{\r\n                                classes: {\r\n                                input: classes.resize,\r\n                                },\r\n                            }}\r\n                          textAlign=\"right\"\r\n                            value = {summary}\r\n                            onChange={e => setSummary(e.target.value)} \r\n                        />\r\n\r\n                    </form>\r\n                    <div className={classes.space}>\r\n                    <Button  variant=\"contained\"  color=\"primary\" onClick={closeModal} m=\"2rem\">\r\n                      Close\r\n                    </Button>           \r\n\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleAddComment}>\r\n                      Save\r\n                    </Button> \r\n                    </div>                                 \r\n                </div>\r\n\r\n            </ dialog>\r\n\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\pages\\Appointments\\Appointments.js",["146","147","148","149","150","151"],"C:\\Users\\Tyrist\\Desktop\\Course Front End\\Project\\dental-site\\src\\components\\LoginComponent\\RedirectComponent\\RedirectComponent.js",["152"],"import './RedirectComponent.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { ListItem, ListItemText } from '@material-ui/core';\r\nimport { jssPreset } from \"@material-ui/core/styles\";\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\n\r\nfunction RedirectComponent (props)\r\n{\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            maxWidth: 500,\r\n            [theme.breakpoints.down(\"md\")] : {\r\n                maxWidth: 350\r\n            },\r\n            [theme.breakpoints.down(\"sm\")] : {\r\n                maxWidth: 200\r\n            }\r\n          },        \r\n        container: {\r\n            padding: theme.spacing(3),\r\n            border: \"1px solid blue\",\r\n            borderTopLeftRadius: \"25px\",\r\n        },\r\n\r\n        right: {\r\n            display: `flex`,\r\n            justifyContent: `space-around`\r\n        }\r\n  }));\r\n\r\n      // Configure JSS\r\n      const jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\n    const classes = useStyles(); \r\n    return(\r\n        <>\r\n        <Container className={`${classes.container} ${classes.root}`} >\r\n            <h3>שירותי האתר</h3>\r\n\r\n\r\n            <a href={ `#/appointments/Geb4GTbjAg` } >\r\n                <ListItem button>\r\n                <ListItemText primary=\"זימון תור לבדיקת רופא שיניים\" />\r\n                </ListItem>\r\n             </a>\r\n\r\n             <a href={ `#/appointments/5lRmREiFH3`} >\r\n                <ListItem button>\r\n                <ListItemText primary=\"זימון תור לבדיקה ליישור שיניים\" />\r\n                </ListItem>\r\n             </a>    \r\n             <a  href={ `#/appointments/S5Z6hBmEka`} >\r\n                <ListItem button>\r\n                <ListItemText primary=\"זימון תור לשיננית\" />\r\n                </ListItem>\r\n             </a>                      \r\n                \r\n        </Container>\r\n        </>         \r\n    )\r\n\r\n}\r\nexport default RedirectComponent\r\n",{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":9,"column":8,"nodeType":"159","messageId":"160","endLine":9,"endColumn":12},{"ruleId":"157","severity":1,"message":"161","line":12,"column":8,"nodeType":"159","messageId":"160","endLine":12,"endColumn":19},{"ruleId":"157","severity":1,"message":"162","line":14,"column":9,"nodeType":"159","messageId":"160","endLine":14,"endColumn":20},{"ruleId":"157","severity":1,"message":"163","line":16,"column":10,"nodeType":"159","messageId":"160","endLine":16,"endColumn":26},{"ruleId":"157","severity":1,"message":"164","line":8,"column":10,"nodeType":"159","messageId":"160","endLine":8,"endColumn":32},{"ruleId":"157","severity":1,"message":"165","line":40,"column":28,"nodeType":"159","messageId":"160","endLine":40,"endColumn":39},{"ruleId":"166","severity":1,"message":"167","line":65,"column":7,"nodeType":"168","endLine":65,"endColumn":9,"suggestions":"169"},{"ruleId":"157","severity":1,"message":"170","line":91,"column":15,"nodeType":"159","messageId":"160","endLine":91,"endColumn":25},{"ruleId":"157","severity":1,"message":"171","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":37},{"ruleId":"157","severity":1,"message":"172","line":12,"column":24,"nodeType":"159","messageId":"160","endLine":12,"endColumn":29},{"ruleId":"157","severity":1,"message":"173","line":3,"column":17,"nodeType":"159","messageId":"160","endLine":3,"endColumn":26},{"ruleId":"157","severity":1,"message":"174","line":3,"column":37,"nodeType":"159","messageId":"160","endLine":3,"endColumn":45},{"ruleId":"157","severity":1,"message":"175","line":11,"column":24,"nodeType":"159","messageId":"160","endLine":11,"endColumn":36},{"ruleId":"157","severity":1,"message":"176","line":16,"column":12,"nodeType":"159","messageId":"160","endLine":16,"endColumn":19},{"ruleId":"157","severity":1,"message":"177","line":16,"column":21,"nodeType":"159","messageId":"160","endLine":16,"endColumn":31},{"ruleId":"157","severity":1,"message":"178","line":33,"column":24,"nodeType":"159","messageId":"160","endLine":33,"endColumn":36},{"ruleId":"179","severity":1,"message":"180","line":64,"column":20,"nodeType":"159","messageId":"181","endLine":64,"endColumn":45},{"ruleId":"182","severity":1,"message":"183","line":64,"column":63,"nodeType":"184","messageId":"185","endLine":64,"endColumn":65},{"ruleId":"166","severity":1,"message":"186","line":70,"column":65,"nodeType":"168","endLine":70,"endColumn":98,"suggestions":"187"},{"ruleId":"157","severity":1,"message":"188","line":72,"column":14,"nodeType":"159","messageId":"160","endLine":72,"endColumn":32},{"ruleId":"157","severity":1,"message":"189","line":1,"column":29,"nodeType":"159","messageId":"160","endLine":1,"endColumn":37},{"ruleId":"157","severity":1,"message":"190","line":1,"column":39,"nodeType":"159","messageId":"160","endLine":1,"endColumn":45},{"ruleId":"157","severity":1,"message":"191","line":2,"column":17,"nodeType":"159","messageId":"160","endLine":2,"endColumn":28},{"ruleId":"157","severity":1,"message":"192","line":2,"column":30,"nodeType":"159","messageId":"160","endLine":2,"endColumn":44},{"ruleId":"157","severity":1,"message":"172","line":7,"column":34,"nodeType":"159","messageId":"160","endLine":7,"endColumn":39},{"ruleId":"157","severity":1,"message":"193","line":10,"column":26,"nodeType":"159","messageId":"160","endLine":10,"endColumn":35},{"ruleId":"157","severity":1,"message":"194","line":10,"column":48,"nodeType":"159","messageId":"160","endLine":10,"endColumn":61},{"ruleId":"157","severity":1,"message":"195","line":10,"column":63,"nodeType":"159","messageId":"160","endLine":10,"endColumn":77},{"ruleId":"157","severity":1,"message":"196","line":11,"column":10,"nodeType":"159","messageId":"160","endLine":11,"endColumn":19},{"ruleId":"157","severity":1,"message":"197","line":18,"column":13,"nodeType":"159","messageId":"160","endLine":18,"endColumn":23},{"ruleId":"198","severity":1,"message":"199","line":119,"column":21,"nodeType":"200","endLine":119,"endColumn":33},{"ruleId":"157","severity":1,"message":"197","line":5,"column":12,"nodeType":"159","messageId":"160","endLine":5,"endColumn":22},{"ruleId":"157","severity":1,"message":"197","line":5,"column":12,"nodeType":"159","messageId":"160","endLine":5,"endColumn":22},{"ruleId":"157","severity":1,"message":"201","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"182","severity":1,"message":"183","line":12,"column":60,"nodeType":"184","messageId":"185","endLine":12,"endColumn":62},{"ruleId":"182","severity":1,"message":"183","line":14,"column":63,"nodeType":"184","messageId":"185","endLine":14,"endColumn":65},{"ruleId":"157","severity":1,"message":"202","line":1,"column":10,"nodeType":"159","messageId":"160","endLine":1,"endColumn":18},{"ruleId":"157","severity":1,"message":"161","line":9,"column":8,"nodeType":"159","messageId":"160","endLine":9,"endColumn":19},{"ruleId":"157","severity":1,"message":"203","line":17,"column":12,"nodeType":"159","messageId":"160","endLine":17,"endColumn":28},{"ruleId":"157","severity":1,"message":"204","line":17,"column":30,"nodeType":"159","messageId":"160","endLine":17,"endColumn":49},{"ruleId":"205","severity":2,"message":"206","line":43,"column":13,"nodeType":"159","messageId":"207","endLine":43,"endColumn":23},{"ruleId":"157","severity":1,"message":"174","line":12,"column":10,"nodeType":"159","messageId":"160","endLine":12,"endColumn":18},{"ruleId":"157","severity":1,"message":"196","line":12,"column":20,"nodeType":"159","messageId":"160","endLine":12,"endColumn":29},{"ruleId":"157","severity":1,"message":"208","line":15,"column":10,"nodeType":"159","messageId":"160","endLine":15,"endColumn":32},{"ruleId":"157","severity":1,"message":"173","line":2,"column":17,"nodeType":"159","messageId":"160","endLine":2,"endColumn":26},{"ruleId":"157","severity":1,"message":"209","line":9,"column":43,"nodeType":"159","messageId":"160","endLine":9,"endColumn":53},{"ruleId":"157","severity":1,"message":"210","line":13,"column":8,"nodeType":"159","messageId":"160","endLine":13,"endColumn":23},{"ruleId":"157","severity":1,"message":"211","line":14,"column":8,"nodeType":"159","messageId":"160","endLine":14,"endColumn":25},{"ruleId":"157","severity":1,"message":"175","line":22,"column":12,"nodeType":"159","messageId":"160","endLine":22,"endColumn":24},{"ruleId":"157","severity":1,"message":"212","line":14,"column":10,"nodeType":"159","messageId":"160","endLine":14,"endColumn":13},{"ruleId":"157","severity":1,"message":"213","line":3,"column":17,"nodeType":"159","messageId":"160","endLine":3,"endColumn":24},{"ruleId":"157","severity":1,"message":"194","line":11,"column":27,"nodeType":"159","messageId":"160","endLine":11,"endColumn":40},{"ruleId":"157","severity":1,"message":"214","line":11,"column":50,"nodeType":"159","messageId":"160","endLine":11,"endColumn":61},{"ruleId":"157","severity":1,"message":"195","line":11,"column":63,"nodeType":"159","messageId":"160","endLine":11,"endColumn":77},{"ruleId":"166","severity":1,"message":"215","line":47,"column":7,"nodeType":"168","endLine":47,"endColumn":13,"suggestions":"216"},{"ruleId":"217","severity":1,"message":"218","line":105,"column":16,"nodeType":"219","endLine":105,"endColumn":32},{"ruleId":"157","severity":1,"message":"220","line":35,"column":13,"nodeType":"159","messageId":"160","endLine":35,"endColumn":16},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"no-unused-vars","'User' is defined but never used.","Identifier","unusedVar","'Appointment' is defined but never used.","'getDateOnly' is defined but never used.","'CircularProgress' is defined but never used.","'ContactSupportOutlined' is defined but never used.","'fetchDoctor' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeUser', 'employeeArray', and 'viewBy'. Either include them or remove the dependency array.","ArrayExpression",["223"],"'updatedApp' is assigned a value but never used.","'SignalCellularNoSimOutlined' is defined but never used.","'users' is assigned a value but never used.","'Component' is defined but never used.","'useState' is defined but never used.","'appointments' is assigned a value but never used.","'comment' is assigned a value but never used.","'setComment' is assigned a value but never used.","'fetchPacient' is defined but never used.","no-func-assign","'getCommentFromSelectedRow' is a function.","isAFunction","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useMemo has a missing dependency: 'getCommentFromSelectedRow'. Either include it or remove the dependency array.",["224"],"'getIndexOfSelected' is defined but never used.","'HomeIcon' is defined but never used.","'Button' is defined but never used.","'AccessAlarm' is defined but never used.","'ThreeDRotation' is defined but never used.","'sProvider' is defined but never used.","'ThemeProvider' is defined but never used.","'createMuiTheme' is defined but never used.","'useEffect' is defined but never used.","'activeUser' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Parse' is defined but never used.","'Redirect' is defined but never used.","'freeAppointments' is assigned a value but never used.","'setFreeAppointments' is assigned a value but never used.","no-undef","'setRecipes' is not defined.","undef","'DepartureBoardOutlined' is defined but never used.","'Typography' is defined but never used.","'ArrowDropUpIcon' is defined but never used.","'ArrowDropDownIcon' is defined but never used.","'RTL' is defined but never used.","'useMemo' is defined but never used.","'CssBaseline' is defined but never used.","React Hook useEffect has a missing dependency: 'selectedJobHome'. Either include it or remove the dependency array.",["225"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'jss' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},"Update the dependencies array to be: [activeUser, employeeArray, viewBy]",{"range":"232","text":"233"},"Update the dependencies array to be: [getCommentFromSelectedRow]",{"range":"234","text":"235"},"Update the dependencies array to be: [jobs, selectedJobHome]",{"range":"236","text":"237"},[2735,2737],"[activeUser, employeeArray, viewBy]",[2900,2933],"[getCommentFromSelectedRow]",[1715,1721],"[jobs, selectedJobHome]"]